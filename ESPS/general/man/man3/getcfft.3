.\" Copyright (c) 1990 Entropic Speech, Inc.
.\" Copyright (c) 1997 Entropic Research Laboratory, Inc. All rights reserved.
.\" @(#)getcfft.3	1.3 18 Apr 1997 ESI/ERL
.ds ]W (c) 1997 Entropic Research Laboratory, Inc.
.TH GET_CFFT 3\-ESPSsp 18 Apr 1997
.SH NAME
.nf
get_cfft \- Compute the fast Fourier transform of a FLOAT_CPLX data sequence.
get_cfftd \- Compute the fast Fourier transform of a DOUBLE_CPLX data sequence.
get_cfft_inv \- Compute the inverse fast Fourier transform of a FLOAT_CPLX data sequence.
get_cfftd_inv \- Compute the inverse fast Fourier transform of a DOUBLE_CPLX data sequence.
.SH SYNOPSIS
.ft B
void
.br
get_cfft (data, log_fft_size)
.br
float_cplx   *data;
.br
int     log_fft_size;
.sp
void
.br
get_cfftd (data, log_fft_size)
.br
double_cplx  *data;
.br
int     log_fft_size;
.sp
void
.br
get_cfft_inv (data, log_fft_size)
.br
float_cplx   *data;
.br
int     log_fft_size;
.sp
void
.br
get_cfftd_inv (data, log_fft_size)
.br
double_cplx   *data;
.br
int     log_fft_size;
.sp .5
.SH DESCRIPTION
The
.I get_fft
and
.I get_cfft_inv
routines compute the discrete Fourier transform and the inverse discrete
Fourier transform, respectively, of a given complex data sequence using the
fast Fourier transform algorithm.
The input data is supplied through an array
.B
data
that is of type FLOAT_CPLX.
The transform size is
.B
2**log_fft_size.
This is also assumed to be the size of the input data array.
The FFT output is returned through the input array.
For transform size N, there are N/2 negative frequencies,
and N/2 positive frequencies.
The order in which the frequency components are returned is as follows:
f(0), f(1),..., f(N/2), f(\-(N/2) + 1), f(\-(N/2) + 2),..., f(\-1).
This amounts to N values, with no explicit value for f(\-(N/2)) since
f(N/2) = f(\-(N/2)).
.PP
The functions
.I get_cfftd
and
.I
get_cfftd_inv
are the analogous functions for data of type DOUBLE_CPLX.
.SH BUGS
None
.SH SEE ALSO
.nf
\fIget_fft\fP(3\-\s-1ESPS\s+1), \fIget_fft_inv\fP(3\-\s-1ESPS\s+1), \fIget_rfft\fP(3\-\s-1ESPS\s+1)
.fi
.SH COMMENTS
The sine and cosine tables needed by the FFT algorithm are computed first time
these routines are called.  During the subsequent calls, these tables are 
recomputed only if the transform sizes are different from the previous calls.
This information can be exploited to implement the user's program efficiently
in certain situations.
.SH REFERENCES
[1] A. V. Oppenheim and R. W. Schafer,
.I
Digital Signal Processing,
Prentice-Hall, NJ. 1975.
.SH AUTHOR
FFT routines by Shankar Narayan; complex covers by David Burton.

