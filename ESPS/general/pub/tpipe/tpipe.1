.TH TPIPE 1  "29 January 1990"
.\" @(#)tpipe.1 1.0 90/01/29; David B Rosen (rosen@bucasb.bu.edu)
.SH NAME
tpipe \- replicate the standard output into an additional pipeline
that is run in a subshell
.SH SYNOPSIS
.B tpipe
[
.I pipeline
]
.IX  "tpipe command"  ""  "\fLtpipe\fP \(em copy standard output to many pipelines"
.IX  "copy" "standard output to many pipelines \(em \fLtpipe\fP"
.IX  "standard output"  "copy to many pipelines"  ""  "copy to many pipelines \(em \fLtpipe\fP"
.IX  pipelines  "copy standard output to many"  ""  "copy standard output to many \(em \fLtpipe\fP
"
.SH DESCRIPTION
.B tpipe
transcribes the standard input to the
standard output and simultaneously writes an additional copy to
a specified
.IR pipeline .
.PP
tpipe is similar to tee(1) except that tpipe writes the duplicate copy
of its standard input to a command or pipeline instead of a file. This
can help you avoid re-executing earlier commands in the pipeline,
writing temporary files, or resorting to the use of named pipes.
.PP
The specified
.IR pipeline
is always executed in a subshell by sh(1), regardless of your current
shell.  If a non-empty string is supplied as the argument, it must be 
a valid pipeline or command for sh(1). Normally, you will want to enclose
the
.IR pipeline
argument in quotes ('' or "").  The type of quotes you choose
will affect variable substitution by your shell (see the man page 
for your shell, such as csh(1), for details).
.PP
If the subshell pipeline writes to its standard output, this output
will go to the standard output of tpipe, where it will be interspersed
in an unpredictable way with the other copy of standard input.
Normally, this is not what you want. Instead, you would typically
specify a subshell
.IR pipeline 
whose output is redirected to a file (as in the example
below) or has some other effect.
.SH EXAMPLE
.IP
% cmd1 <infile | tpipe "cmd2 | cmd3 >outfile" | cmd4 
.PP
which has the effect of running the output of command cmd1
simultaneously through two pipelines, "cmd2 | cmd3 >outfile" and cmd4.
Diagramatically, in this example (this will look wrong with
a variable-spaced font):

.nf
                     --> cmd2 --> cmd3 --> outfile
                   /
infile  --> cmd1 -<
                   \\
                     --> cmd4 -->  (standard output)
.fi
.SH SEE ALSO
.BR tee (1),
.BR sh (1),
.BR cat (1)

.SH AUTHOR
David B Rosen
.PP
THIS SOFTWARE IS PROVIDED "AS IS" AND WITHOUT EXPRESS OR IMPLIED WARRANTY.
