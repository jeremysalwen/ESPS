#! /bin/sh
# SETUP script for the free ESPS 6.0, derived from the Entropic install script
# for ESPS 5.3.  Copyright notice and comments from the ESPS script are
# retained below.
#
################################################################################
#
#  This material contains proprietary software of Entropic Research Lab, Inc.
#  Any reproduction, distribution, or publication without the the prior
#  written permission of Entropic Research Lab, Inc. is strictly prohibited.
#  Any public distribution of copies of this work authorized in writing by
#  Entropic Research Lab, Inc. must bear the notice
#
#      "Copyright (c) 1990 Entropic Research Lab, Inc.; All rights reserved"
#
#
#  Install script for ESPS @(#)install  3.20 11/8/88 ESI
#
################################################################################
#
#  Remember, since this is a shell (/bin/sh) script, there should be
#  no spaces around the = and quote multi-word values.
#
#  Things to check:
#   1. check the machine type default.  Possible values listed just
#      below.  Search for MACH= to see where its set.  You can also
#      set it via the command line.
#   2. check floating point type.  This is after option processing
#      below.  Search for FLOAT.
#   3. check the destination (target) directory name (SPSDIR).  This
#      directory doesn't have to exist, but the user-id running this
#      script must be able to create it.
#   4. There are many other parameters that can be changed in the
#      block with SPSDIR.  We suggest you leave all of these alone.
#   5. There are some machine dependent parameters after the option
#      processing.  Check these.  The only ones you should change
#      are d/a and a/d types in the Masscomp block.  Search for
#          ADDEV, DADEV, ADTYPE, CLKDEV.   Also check the maximum value
#          for the AD converter and DA converter.  It depends on if
#          you have a 12 or 16 bit converter (or whatever size).
#   6. The pager program (like more(1)) that gets called is defined
#      below.  Set it if you want to use something else.  Search for
#          PAGER.
#   7. The command to do hardcopy plotting must be specified below.
#      Search for esps_plot.
#   8. Name you C compiler (if its not cc) in CC=.
#   9. Check VTROFF.  Make this equal to your troff command if you
#      can do troff typeset type output (used by eman -t).
#
ESPS_VERSION=6.0
WAVES_VERSION=6.0
################################################################################
# Option Processing  (see SETUP.hlp)
#
# Option defaults:
#
# Reset the following line if desired.  We suggest using it as is.
# This determines where the target directory is.  This directory
# doesn't have to exist, but the user-id that the isntall script is run
# under must be able to create it.
#
SPSDIR=/usr/esps
#
CLEAN=          # set CLEAN=clean to do a "make clean" after each
            # install.  Otherwise leave it CLEAN=
DOLOCAL=n       # y to install a local section
LOCALDIR=local.skel # name of your local directory (peer to general)
            # ours is local.epi, yours should be something else
            # this is only used if LOLOCAL = y
            #
# LOCAL=" -DDEMO "
# LOCAL="-DESI "    # Should be " " for initial installation
LOCAL=" "
            # if you have any local -D flags, they go here
            # e.g. we do -DESI for our local programs
            # must be non-null for a local part, make it
            # -DXXX, where XXX means something to you
            #
DOPUB=n         # Make stuff in pub directory.
CATS=n          # y to make cat files for man pages (real slooow...)
case "`uname`" in Linux) MACH=LINUX;; Darwin) MACH=MACOS;; *) MACH="";; esac
# machine type, see above for what they mean
#SDI 12/6/06 Below rather than above, but doesn't exactly mean machine.  Used
# for -D$MACH compiler flag and locations of libraries and include files.
# You can override the MACH setting here with the -M flag (see below)
CFLAG=0         # always initialize this to 0
NFLAG=          # passed to make (reserved for -n)
WHATIS=y        # y to make whatis data base (for man -k)
NODIFFMK=y      # set to y if this system doesn't have diffmk -
            # a substitute is set below in the system dependent part
            # for linux
CC=gcc           # Name of your C compiler.  For Convex you can
            # use vc here.
ERELNOTE=rel42.doc  # name of release note file for esps
WRELNOTE=wrel31.doc # name of release note file for waves+

if test MACH = SOLBOURNE
 then
 MACH=SUN4
fi
################################################################################
#
# Configuration for Hardcopy Plotting
#
# The esps plot programs can output tektronix compatible plots.  If your
# hardcopy plotter can handle this (like imagen laser printers) then
# put the right command here to receive tek codes on standard in and
# them.     This is the command run when the -Timagen or -Tplotter
# option is used on the plot programs.  There are several cases shown
# here.  A postscript printer (like an Apple), a local imagen with imagen
# software, an imagen on a CONVEX with iprx, and a remote imagen.
#
# If you have a postscript printer, please contact us for the additional
# software (free).
#
PLOTCOMMAND=esps_plot   # leave these two lines alone in most cases
export PLOTCOMMAND
#
#  >>> EDIT THE esps_plot SCRIPT BELOW <<<
################################################################################
#
rm -f esps_plot
cat <<ZAP >esps_plot
#! /bin/sh
# do not hack this file.  Change it in the install script and rerun install
# This script is fed a tektronix format plot file in standard input.
#
# For the case of a remote machine do something like: (masscomp is the remote)
# rsh masscomp ipr -Ltektronix -D\"prerasterization on\"
#
# For a postscript printer do:  (We will send tek2ps on request)
# tek2ps -e | lpr
#
# For ipr (imagen) on the local machine you usually do:
ipr -Ltektronix -D"prerasterization on"
#
# For an imagen on CONVEX you might do:
# (echo "@document(language tektronix)"; cat -) | /usr/ucb/lpr -Pip -v
#
ZAP
################################################################################
#
# For plotting the output of image, a Imagen printer is need (for now)
# Put the command that we can pipe Impress output to here:
#
SPOOL_CMD=lpr
#
#
#
################################################################################

while test x$1 != x
do
    case "$1" in
    -p) SPSDIR=$2; shift;;
    -M) MACH=$2; shift ;;
    -C) CLEAN="clean"; ;;
    -h) more SETUP.hlp; exit 0;;
    -*) echo "$0: unknown option $1"; more SETUP.hlp; exit 1 ;;
    *)  break;;
    esac
    shift
done
OLDESPS_BASE=$ESPS_BASE
ESPS_BASE=$SPSDIR; export ESPS_BASE
# Put the value of $ESPS_BASE in a file to be picked up by the install
# script
echo $ESPS_BASE > ESPS_BASE
echo Options:
echo SPSDIR=$SPSDIR, ESPS_BASE=$ESPS_BASE, CFLAG=$CFLAG, CLEAN=$CLEAN, DOLOCAL=$DOLOCAL
echo DOPUB=$DOPUB, CATS=$CATS, MACH=$MACH, NFLAG=$NFLAG, WHATIS=$WHATIS
################################################################################
#
# on Masscomp systems, be sure that we are in the ucb universe
#
if test $MACH = M5600 -o $MACH = M5500
then
  uni=`universe`
  if test $uni != ucb
   then
    echo ERROR: You must be in the ucb universe to install ESPS.
    echo type: universe ucb
    echo and start the install again
    exit 1
  fi
fi
#
################################################################################
#
# -h flag for cross compiling to another machine.  Used for masscomp only
#HFLAG="-h68010 -fsoft"
HFLAG=
#
################################################################################
#
# -DNOPAD option to produce a version that works with old (pre-3.1) Sun
# data files (don't fool with this)
#NOPAD="-DNOPAD"
NOPAD=
#
################################################################################
#
# we strongly suggest leaving all of these lines as they are:
#
SINCP=$SPSDIR/include   # SINCP is the parent of the include file directory
SINC=$SINCP/esps    # SINC is ESPS include file directory
LIBDIR=$SPSDIR/lib  # LIBDIR is library directory
WAVESDIR=$LIBDIR/waves  # WAVESDIR is where the waves libraries go
WAVESMENUS=$WAVESDIR/menus # WAVESMENUS holds waves menu scripts.
WAVESFILES=$WAVESDIR/files # WAVESFILES holds general waves+ datafiles.
MENUDIR=$LIBDIR/menus   # MENUDIR is where mbuttons and fbuttons scripts go.
COLORMAPDIR=$LIBDIR/colormap # where mbuttons and fbuttons scripts go.
FILTDIR=$LIBDIR/filters # FILTDIR is where filter data files go.
FILESDIR=$LIBDIR/files  # FILESDIR are where data files go.
KEYDIR=$LIBDIR/keys # KEYDIR for license keys
PARAMSDIR=$LIBDIR/params # PARAMSDIR holds paramater files.
FIXEDFONTDIR=$LIBDIR/fixedwidthfonts # for ebanner
MANDIR=$SPSDIR/man  # MANDIR is the parent man directory
BINDIR=$SPSDIR/bin  # BINDIR is the directory for binaries
OLDBIN=$BINDIR/old  # OLDBIN is a place for old binaries
LIBNAME=libespsg.a  # LIBNAME is the name of the ESPS library
EHDRLIB=libhdre.a   # EHDRLIB is the name of the header library
            # compiled for an ESPS license only
WHDRLIB=libhdrw.a   # WHDRLIB is the name of the header library
            # compiled for an ESPS or waves+ license
SHDRLIB=libhdrs.a   # commpiled for ESPS/waves or ERS
NHDRLIB="libhdrn.a" # compiled for no license
 EXVLIB=libexv.a        # ESPS XView library
#EXVLIB=
 EXV_LIB=${LIBDIR}/${EXVLIB}
#EXV_LIB=
LLIBROOT=espsg      # LLIBROOT is root of lint library file name
            # LLIBNAME is the lint library name
LLIBNAME=llib-l${LLIBROOT}.ln
SPSLIB=${EXV_LIB}" "${LIBDIR}/${EHDRLIB}" "${LIBDIR}/${LIBNAME}
            # The ESPS library for use on dependency rules
WSPSLIB=${EXV_LIB}" "${LIBDIR}/${WHDRLIB}" "${LIBDIR}/${LIBNAME}
NSPSLIB=${EXV_LIB}" "${LIBDIR}/${NHDRLIB}" "${LIBDIR}/${LIBNAME}
SSPSLIB=${EXV_LIB}" "${LIBDIR}/${SHDRLIB}" "${LIBDIR}/${LIBNAME}
            # The ESPS library for use on dependency rules
            # for waves related programs
LINTLIB=$LIBDIR/$LLIBNAME
PLOTDIR=$LIBDIR     # Where the plotting programs go
            # The name of the lint source file for echeck
LINTFILE=$LIBDIR/llib-lespsg.c
            # SINCLP is the local h file parent directory
SINCLP=$SPSDIR/include.local
SINCL=$SINCLP/esps  # SINCL is the local include directory
            # the same as BINDIR.
################################################################################
#
# These are the access mode variables.  These can be reset to limit
# access to group if desired
#
PROGMOD=0755        # PROGMOD is the access mode for programs
MANMOD=0644     # MANMOD is the access mode for man pages
HMOD=0644       # HMOD is the access mode for include files
LIBMOD=0644     # LIBMOD is the mode of the library
SPSMOD=0755     # SPSMOD is mode of main esps directory
MANDIRMOD=0755      # mode of man directory
CATMOD=0777     # mode of man/cat? directories
BINDIRMOD=0755      # mode of bin directory
LIBDIRMOD=0755      # mode of lib directory
SINCMOD=0755        # mode of include directory
#
################################################################################
#
# Define STRIP if you want binaries stripped before installation
#
STRIP=strip         # causes binaries to be stripped(1)
#STRIP="@echo no strip done on" # use this one to not strip programs
#
# Some other initial values that not all systems have
RANLIB=ranlib
EQN=eqn
# Define the command for ln. This might be overridden on some systems.
LINK='ln -s'
################################################################################
#  Possible System type values:
#  enter the default below, or use -M command line option
#
# LINUX         # only tested on Fedora Core 3-5 so far
# MACOS         # Only tested on Mac OS-X 10.4.5
# The rest of these are obsolete, and certainly have not been tested recently!
# MACH=M5500        # 68010 Masscomp
# MACH=M5600        # 68020 Masscomp
# MACH=SUN3     # Sun 3 series
# MACH=SUN4     # Sun 4 series
# MACH=SUN386i      # Sun 386i
# MACH=CONVEX       # Convex
# MACH=DS3100       # DEC Station 3100 (MIPS RISC)
# MACH=VAX      # DEC Vax (running Ultrix only!)
#
#
#
################################################################################
#
#  Specify floating point type:
#
#  Find your machine type below and set the correct floating point
#  option.
#
################################################################################
#  For SUN3:
#  Remove comment from the correct one, comment out the others
#  See the Sun3 'cc' man page for information about this.  If in doubt
#  use -fsoft for now.  It will always work, but is slow.
#
# SUN3
#
if test $MACH = SUN3
 then
FLOAT=-f68881
# FLOAT=-ffpa
# FLOAT=-fsky
# FLOAT=-fsoft
# FLOAT=-fswitch
# FLOAT=
fi
#
################################################################################
# SUN4   -- No floating point options needed
#
if test $MACH = SUN4
 then
  FLOAT=
fi
################################################################################
# SUN386i   -- No floating point options needed
#
if test $MACH = SUN386i
 then
  FLOAT=
fi
################################################################################
#  For Masscomp:  M5500 or M5600
#
#  Use the -f option to generate hardware floating point support.  On a
#  68020 machine with the 68881 chip, no -f is used.  See the Masscomp
#  cc(1) man page for details.  There might be other options that aren't
#  listed here.  Go ahead and use them if they seem right for your system.
#
if test $MACH = M5500 -o $MACH = M5600
 then
FLOAT=      # use for 68020 masscomp with only 68881
#FLOAT=-fsoft   # software floating point on 68010 with no floating hw
#FLOAT=-f   # hardware floating point board
fi
#
#
################################################################################
#  For CONVEX, use the -fi option if IEEE floating point is desired.
#  This is required if you want to share binary data files with Suns or
#  Masscomps.
#
if test $MACH = CONVEX
 then
FLOAT=-fi   # use IEEE floating point mode
fi
#
#
#
#
################################################################################
# DEC DS3100   -- No floating point options needed
#
if test $MACH = DS3100
 then
  FLOAT=
fi
################################################################################
# DEC VAX   -- No floating point options needed
#
if test $MACH = VAX
 then
  FLOAT=
fi
################################################################################
#echo ESPS Installation Script started at `date`
echo ESPS Configuration Script started at `date` $ESPS_VERSION
echo Target directory: $SPSDIR
echo Library directory: $LIBDIR
echo Machine type: $MACH
[ -n "$FLOAT" ] && echo Floating point option: $FLOAT
[ -n "$LOCAL" ] && echo LOCAL: $LOCAL
here=`pwd`
################################################################################
# All other machine dependent defines will go here.
# Don't change ours the first time around.  You probably won't ever want
# to change them.
#
# SDI 16 Aug '06  You may well want to change the LINUX ones.  They have only
# been tried on Fedora Core systems.  If you do a more thorough job,
# please remove this notice.
#
################################################################################
# Machine dependent defines for LINUX:
#
if test $MACH = LINUX
 then
  ANSI_CC="gcc -ansi"
  ELM_CC="gcc -DANSI_C"
  DEFINES="-DLINUX_OR_MAC"
#Xorg libraries that used to be in /usr/X11R6/lib are now in /usr/lib on
#Fedora Core 5.
  X_LIB="-L/usr/X11R6/lib -L/usr/lib -lX11"
  X_INC="/usr/X11R6/include"
  X_R7_LIBS="-lXdmcp -lXau"
  WINLIBS="$X_LIB -lpthread"
  X_UTIL="-lutil"
  if ld -lXdmcp -lXau -o test$$ 2>/dev/null; then
    WINLIBS="$WINLIBS $X_R7_LIBS"
    rm -f test$$
  fi
  cd src/lib
  rm -f makefile
  ln -s makefile.linux makefile
  chmod a+w makefile
  cd $here
fi
################################################################################
# Machine dependent defines for MACOS-X:
#
if test $MACH = MACOS
 then
  CC="gcc -fno-builtin" \
  ANSI_CC="gcc -ansi -DANSI_C"
  ELM_CC="gcc -DANSI_C"
  DEFINES="-DLINUX_OR_MAC"
  X_LIB="-L/usr/X11R6/lib -L/usr/lib -lX11"
  X_INC="/usr/X11R6/include"
  X_R7_LIBS="-lXdmcp -lXau"
  WINLIBS="-L/usr/X11R6/lib -lX11"
  WINDOWS=" -DXWIN "
  XVIEW_B_OPT=" -bind_at_load"
  X_UTIL=""
  cd src/lib
  rm -f makefile
  ln -s makefile.mac makefile
  chmod a+w makefile
  cd $here
fi
# We wait until the $SPSDIR directory tree has been created below before
# checking for xview libraries and installing them if necessary.  See the next
# "test $MACH = LINUX" .
#
################################################################################
# Machine dependent defines for SUN3:
#
if test $MACH = SUN3
 then
  XWIN=YES
  SUNVIEW=YES
  TOUCH="touch -f"      # must use -f to touch read-only files
  MKLINTLIB="lint -D$MACH -I$SINCP -C$LLIBROOT -DLIB"
  LINT="lint -b -c "        # just plain lint here (see lint(1))
  PLAY=             # no play program on Sun
  RECORD=           # no record program on Sun
  MCD=mcd           # Our version of mcd(1)
  MCD_PROG=$MCD         # should always be $MCD on Sun
  RANGE=            # sun version of range program
  SHOWRAS=showras       # sun only program
  DEBUGGER=dbx          # name of the Sun symbolic debugger
  XVIEW_INC="/usr/openwin/include "
  XVIEW_LIB="-L/usr/openwin/lib -lxview"
  if test $SUNVIEW = YES
   then
    MCD=mcd         # sunview mcd program
    WINDOWS=" -DSUNVUE "    # defines which window system we have
    WIN_INC=" "
    WINLIBS="-lsuntool -lsunwindow -lpixrect"
    MCD_PROG=mcd        # Name of Sunview mcd program
    RANGE=          # no range program
  fi
  if test $XWIN = YES
   then
    MCD_PROG=xmcd       # xmcd for Xwindows on Sun
    MCD=xmcd_sun3       # xmcd_sun3 source directory
    WINDOWS=" -I/home/openwin/include -DXWIN " # For system with only X windows
    RANGE=          # Range not needed with X
    WINLIBS="-L/home/openwin/lib -lX11" # X window library
  fi
  if test $SUNVIEW = YES -a $XWIN = YES
   then
    WINDOWS=" -I/usr/openwin/include -DXWIN -DSUNVUE "
    WINLIBS="-L/usr/openwin/lib -lX11 -lsuntool -lsunwindow -lpixrect "
    MCD="mcd xmcd_sun3"
   fi
  SUNOS=OS4         # Put your SUN OS level here OS3 or OS4
  XVIEW_B_OPT="-Bstatic"
#
# Put any other SUN3 defines here
  XOFF="set +x"         # how to you turn off set -x in /bin/sh
fi
#
################################################################################
# Machine dependent defines for SUN4:
#
if test $MACH = SUN4
 then
  XWIN=YES
  SUNVIEW=YES
  TOUCH="touch -f"      # must use -f to touch read-only files
  MKLINTLIB="lint -D$MACH -I$SINCP -C$LLIBROOT -DLIB"
  LINT="lint -b -c "        # just plain lint here (see lint(1))
  PLAY=splay            # splay (SS1 codec)
  RECORD=           # no record program on Sun
  RANGE=            #
  SHOWRAS=showras       # sun only program
  DEBUGGER=dbx          # name of the Sun symbolic debugger
  XVIEW_INC="/h5/openwin3.0/include "
  XVIEW_LIB="-L/h5/openwin3.0/lib -lxview -lolgx -lX11"
  if test $SUNVIEW = YES
   then
    MCD=mcd         # sunview mcd program
    WINDOWS=" -DSUNVUE "    # defines which window system we have
    WIN_INC=" "
    WINLIBS="-lsuntool -lsunwindow -lpixrect"
    MCD_PROG=mcd        # Name of Sunview mcd program
    RANGE=          # no range program
  fi
  if test $XWIN = YES
   then
    MCD_PROG=xmcd       # xmcd for Xwindows on Sun4
    MCD=xmcd_sun4       # xmcd_sun4 source directory
    WINDOWS=" -I/h5/openwin3.0/include -DXWIN " # For system with only X windows
    RANGE=          # Range not needed with X
    WINLIBS="-L/h5/openwin3.0/lib -lX11"        # X window library
  fi
  if test $SUNVIEW = YES -a $XWIN = YES
   then
    WINDOWS=" -I/h5/openwin3.0/include -DXWIN -DSUNVUE "
    WINLIBS="-L/h5/openwin3.0/lib  -lX11 -lsuntool -lsunwindow -lpixrect "
    MCD="mcd xmcd_sun4"
   fi
  SUNOS=OS4         # Put your SUN OS level here OS3 or OS4
  XVIEW_B_OPT="-Bstatic"
#   XVIEW_B_OPT=""
#
# Put any other SUN4 defines here
  XOFF="set +x"         # how to you turn off set -x in /bin/sh
fi
#
################################################################################
# Machine dependent defines for SUN386i:
#
if test $MACH = SUN386i
 then
  TOUCH="touch -f"      # must use -f to touch read-only files
  MKLINTLIB="lint -D$MACH -I$SINCP -C$LLIBROOT -DLIB"
  LINT="lint -b -c "        # just plain lint here (see lint(1))
  PLAY=             # no play program on Sun
  RECORD=           # no record program on Sun
  MCD=mcd           # Our version of mcd(1)
  MCD_PROG=$MCD         # should always be $MCD on Sun
  SHOWRAS=showras       # sun only program
  RANGE=            #
  DEBUGGER=dbx          # name of the Sun symbolic debugger
  WINLIBS="-lsuntool -lsunwindow -lpixrect"
  WINDOWS=" -DSUNVUE "
  XWIN=NO
  SUNOS=OS4         # Put your SUN OS level here OS3 or OS4
#
# Put any other SUN386i defines here
  XOFF="set +x"         # how to you turn off set -x in /bin/sh
fi
#
################################################################################
#
# Machine dependent defines for MASSCOMP
#
if test $MACH = M5600 -o $MACH = M5500
 then
  XWIN=YES          # YES if you have Masscomp X windows, else NO
  SP40=NO           # YES if you have Masscomp GP40 graphics,
                # else NO
                # You CAN have both
  TOUCH=touch
#  DADEV="/dev/dacp0/daf0"  # name of default d/a converter (ef12)
  DADEV="/dev/dacp0/dah0"   # name of default d/a converter (da04)
  CLKDEV="/dev/dacp0/efclk" # name of the default clock device (ef12)
  ADDEV="/dev/dacp0/adf0"   # name of the default a/d converter (ef12)
  ADTYPE="AD16M"        # type of ad converter
#  MAXDA=2047           # max value to d/a (12 bit)
  MAXAD=2047            # max value to a/d (12 bit)
#  MINDA=-2048          # min value to d/a (12 bit)
  MINAD=-2048           # min value to a/d (12 bit)
  MAXDA=32767           # max value to d/a (16 bit)
#  MAXAD=32767          # max value to a/d (16 bit)
  MINDA=-32768          # min value to d/a (16 bit)
#  MINAD=-32768         # min value to a/d (16 bit)
  MKLINTLIB="att lint -DLIB -D$MACH -I$SINCP -c "
  LINT="att lint -b "       # use att lint on Masscomp
  PLAY=mcplay           # name of play program
  RECORD=mcrecord       # name of record program
  XVIEW_INC="/usr/xview/include "
  XVIEW_LIB="/usr/xview/lib/libxview.a /usr/xview/lib/libolgx.a -lX11"
  if test $SP40 = YES
   then
    MCD=            # no mcd program supplied by us
    WINDOWS=" -DSP40 "      # defines which window system we have
    WINLIBS="-lwindow -lgp"     # window libraries to link in
    MCD_PROG=mcd        # Name of Masscomp mcd program
                # mcd for independent graphics,
                # mcdigh for integral graphics
    RANGE=mcrange       # Masscomp range program
  fi
  if test $XWIN = YES
   then
    MCD_PROG=xmcd       # xmcd for Xwindows on Masscomp
    MCD=xmcd_mc         # xmcd_mc source directory
    WINDOWS=" -DXWIN "      # For system with only X windows
    RANGE=          # Range not needed with X
    WINLIBS="-lX11"     # X window library
  fi
  if test $SP40 = YES -a $XWIN = YES
   then
    WINDOWS=" -DXWIN -DSP40 "
    WINLIBS="-lX11 -lwindow -lgp"
   fi
  DEBUGGER=mdb          # name of the symbolic debugger
  SHOWRAS=          # no showras program
#
# Put any other MASSCOMP defines here
  XOFF="set +x"         # how to you turn off set -x in /bin/sh
fi
#
# NOTE: Possible ADTYPE for Masscomps are: EF12M, AD12F, AD12FA, AD12,
#                      AD16M, LOCALad1, LOCALad2
#
#
################################################################################
# Machine dependent defines for CONVEX:
#
if test $MACH = CONVEX
 then
  XWIN=YES          # YES if X window system, else NO
  TOUCH="touch -f"      # must use -f to touch read-only files
  MKLINTLIB="lint -D$MACH -DLIB -I$SINCP -C$LLIBROOT "
  LINT="lint -b -c "        # just plain lint here (see lint(1))
  DADEV="/dev/ad0"      # device name of default d/a converter
  ADDEV="/dev/ad0"      # device name of the default a/d converter
  ADTYPE="RTI-732"      # type of ad converter
  MAXDA=2047            # max value to d/a (12 bit)
  MAXAD=2047            # max value to a/d (12 bit)
  MINDA=-2048           # min value to d/a (12 bit)
  MINAD=-2048           # min value to a/d (12 bit)
  PLAY=cplay            # convex play program
  RECORD=crecord        # convex record program
  RANGE=            # No convex range program
  DEBUGGER=csd          # name of the symbolic debugger
  USE_VC=yes            # use vc instead of cc
                # when doing this, put the right flags
                # for vc in LIBCFLAGS and PROGCFLAGS
                # below
  if test $XWIN = YES
   then
    MCD_PROG=xmcd       # xmcd for Xwindows on Convex
    MCD=xmcd_cx         # xmcd_cx source directory
    WINDOWS=" -DXWIN "      # For system with only X windows
    RANGE=          # Range not needed with X
    WINLIBS="-lX11"     # X window library
  fi
  SHOWRAS=          # no showras program
#
# Put any other CONVEX defines here
  XOFF="set -"          # how to you turn off set -x in /bin/sh
  NODIFFMK=y            # Convex doesn't have diffmk
fi
#
################################################################################
# Machine dependent defines for HP:
#
if test $MACH = HP300 -o $MACH = HP800
 then
  XWIN=YES          # YES for X window system, else NO
  TOUCH="touch"
  MKLINTLIB="lint -DLIB -D$MACH -I$SINCP -o $LLIBROOT "
  LINT="lint -b "       # just plain lint here (see lint(1))
  DADEV=""          # device name of default d/a converter
  ADDEV=""          # device name of the default a/d converter
  ADTYPE=""         # type of ad converter
  MAXDA=2047            # max value to d/a (12 bit)
  MAXAD=2047            # max value to a/d (12 bit)
  MINDA=-2048           # min value to d/a (12 bit)
  MINAD=-2048           # min value to a/d (12 bit)
  PLAY=             # HP play program
  RECORD=           # HP record program
  RANGE=            # No HP range program
  DEBUGGER=xdb          # name of the symbolic debugger
                # below
  WINLIBS=" "
  MORECFLAGS=" -Wc,-Nd2000 -Wc,-Ns4000 "
  DEFINES=" -Dbcopy=memcpy -Drandom=lrand48 -Dsrandom=srand48 "
  if test $XWIN = YES
   then
    MCD_PROG=xmcd       # xmcd for Xwindows on HP
    MCD=xmcd_src        # xmcd source directory
    WINDOWS=" -DXWIN "      # For system with only X windows
    RANGE=          # Range not needed with X
    WINLIBS="-lX11"     # X window library
  fi
  SHOWRAS=          # no showras program
  XVIEW_INC="/usr/xview/include "
  XVIEW_LIB="/usr/xview/lib/libxview.a /usr/xview/lib/libolgx.a -lX11 -lBSD"
#
# Put any other HP defines here
  XOFF="set +x"         # how to you turn off set -x in /bin/sh
  NODIFFMK=n            # HP has diffmk
  RANLIB="echo no need to ranlib:" # HP does not have ranlib
  EQN=cat
fi
#
################################################################################
# Machine dependent defines for MACII:
#
if test $MACH = MACII
 then
  XWIN=YES          # YES for X window system, else NO
  TOUCH="touch"
  MKLINTLIB="lint -DLIB -D$MACH -I$SINCP -o $LLIBROOT "
  LINT="lint -b "       # just plain lint here (see lint(1))
  DADEV=""          # device name of default d/a converter
  ADDEV=""          # device name of the default a/d converter
  ADTYPE=""         # type of ad converter
  MAXDA=2047            # max value to d/a (12 bit)
  MAXAD=2047            # max value to a/d (12 bit)
  MINDA=-2048           # min value to d/a (12 bit)
  MINAD=-2048           # min value to a/d (12 bit)
  PLAY=             # play program
  RECORD=           # record program
  RANGE=            # No range program
  DEBUGGER=xdb          # name of the symbolic debugger
                # below
  WINLIBS=" "
  MORECFLAGS="  "
  DEFINES="  -Drandom=lrand48 -Dsrandom=srand48 "
  if test $XWIN = YES
   then
    MCD_PROG=xmcd       # xmcd for Xwindows on HP
    MCD=xmcd_mac        # xmcd source directory
    WINDOWS=" -DXWIN "      # For system with only X windows
    RANGE=          # Range not needed with X
    WINLIBS="-lX11"     # X window library
  fi
  SHOWRAS=          # no showras program
  XVIEW_INC="/home/openwin/include "
  XVIEW_LIB="-L/home/openwin/lib -lxview -lolgx -lX11"
#
# Put any other HP defines here
  XOFF="set +x"         # how to you turn off set -x in /bin/sh
  NODIFFMK=n            # HP has diffmk
  RANLIB="echo no need to ranlib:" # HP does not have ranlib
  EQN=cat
fi
#
# Machine dependent defines for DS3100:
#
if test $MACH = DS3100
 then
  XWIN=YES          # Must have X windows
  TOUCH="touch -f"      # must use -f to touch read-only files
  MKLINTLIB="lint -D$MACH -I$SINCP -c -DLIB"
  LINT="lint -b "       # just plain lint here (see lint(1))
  PLAY=             # no play program on Sun
  RECORD=           # no record program on Sun
  XVIEW_INC="/usr/xview/include "
  XVIEW_LIB="/usr/xview/lib/libxview.a /usr/xview/lib/libolgx.a /usr/esps/lib/libX11.a"
  if test $XWIN = YES
   then
    MCD_PROG=xmcd       # xmcd for Xwindows
    MCD=xmcd_ds3100     # xmcd binary directory
    WINDOWS=" -DXWIN "  # For system with only X windows
    RANGE=          # Range not needed with X
    WINLIBS=" $LIBDIR/libX11.a "    # X window library
  fi
  DEBUGGER=dbx          # name of the symbolic debugger
  SHOWRAS=          # no showras program
#
# Put any other DS3100 defines here
  XOFF="set -"          # how to you turn off set -x in /bin/sh
  EQN=cat
fi
#
#
# Machine dependent defines for IBM 6000:
#
if test $MACH = IBM_RS6000
 then
  XWIN=YES          # Must have X windows
  TOUCH="touch -f"      # must use -f to touch read-only files
  MKLINTLIB="lint -D$MACH -I$SINCP -c -DLIB"
  LINT="lint -b "       # just plain lint here (see lint(1))
  PLAY=             # no play program on Sun
  RECORD=           # no record program on Sun
  XVIEW_INC="/usr/XView/usr/include  "
  XVIEW_LIB="/usr/XView/usr/lib/libxview.a /usr/XView/usr/lib/libolgx.a /usr/lib/X11.a  "
  if test $XWIN = YES
   then
    MCD_PROG=xmcd       # xmcd for Xwindows
    MCD=xmcd        # xmcd binary directory
    WINDOWS=" -DXWIN "  # For system with only X windows
    RANGE=          # Range not needed with X
    WINLIBS=" -lX11 "   # X window library
  fi
  DEBUGGER=dbx          # name of the symbolic debugger
  SHOWRAS=          # no showras program
#
# Put any other IBM defines here
  XOFF="set -"          # how to you turn off set -x in /bin/sh
  EQN=eqn
  MORECFLAGS="  -qchars=signed -w "
fi
#
################################################################################
# Machine dependent defines for VAX:
#
if test $MACH = VAX
 then
  XWIN=YES          # Must have X windows
  TOUCH="touch -f"      # must use -f to touch read-only files
  MKLINTLIB="lint -D$MACH -I$SINCP -C$LLIBROOT -DLIB"
  LINT="lint -b "       # just plain lint here (see lint(1))
  PLAY=             # no play program on Sun
  RECORD=           # no record program on Sun
  XVIEW_INC="/usr/xview/include "
  XVIEW_LIB="-L/usr/xview/lib -lxview $LIBDIR/libX11.a"
  if test $XWIN = YES
   then
    MCD_PROG=xmcd       # xmcd for Xwindows
    MCD=xmcd_vax        # xmcd binary directory
    WINDOWS=" -DXWIN "  # For system with only X windows
    RANGE=          # Range not needed with X
    WINLIBS=" $LIBDIR/libX11.a "    # X window library
  fi
  DEBUGGER=dbx          # name of the symbolic debugger
  SHOWRAS=          # no showras program
  LIBMV=" -lmV "        # additional math lib on Vax
#
  XOFF="set -"          # how to you turn off set -x in /bin/sh
  EQN=cat
fi
#
################################################################################
################################################################################
# Machine dependent defines for SG:
#
if test $MACH = SG
 then
  XWIN=YES          # Must have X windows
  TOUCH="touch -f"      # must use -f to touch read-only files
  MKLINTLIB="lint -D$MACH -I$SINCP -c -DLIB"
  LINT="lint -b "       # just plain lint here (see lint(1))
  PLAY=             # no play program on Sun
  RECORD=           # no record program on Sun
  if test $XWIN = YES
   then
    MCD_PROG=xmcd       # xmcd for Xwindows
    MCD=xmcd_sg     # xmcd binary directory
    WINDOWS=" -DXWIN "      # For system with only X windows
    RANGE=          # Range not needed with X
    WINLIBS="-lX11"     # X window library
  fi
  DEBUGGER=dbx          # name of the symbolic debugger
  SHOWRAS=          # no showras program
  RANLIB="echo no need to ranlib: "
#
# Put any other SG defines here
  XOFF="set -"          # how to you turn off set -x in /bin/sh
  MORECFLAGS=" -cckr  -I/usr/include/bsd -signed -lsun"
  BSDLIB=" -lsun /usr/lib/libbsd.a "
  EQN=cat
  XVIEW_INC="/usr/xview/include "
  XVIEW_LIB="/usr/xview/lib/libxview.a /usr/xview/lib/libolgx.a -lX11 -lsun -lbsd -lmalloc"
  AUDIOLIB=" -laudio "

fi
#
################################################################################
#
################################################################################
# Machine dependent defines for SONY:
#
if test $MACH = SONY_RISC
 then
  XWIN=YES
  TOUCH="touch -f"      # must use -f to touch read-only files
  MKLINTLIB="lint -DLIB -D$MACH -I$SINCP -c "
  LINT="lint -b -c "        # just plain lint here (see lint(1))
  PLAY=             # Sony play program
  RECORD=           # no record program on Sun
  RANGE=            #
  SHOWRAS=
  DEBUGGER=dbx          # name of the symbolic debugger
  MORECFLAGS=" -Wf,-XNd20000 "
  XVIEW_INC="/usr/xview/include "
  XVIEW_LIB="/usr/xview/lib/libxview.a /usr/xview/lib/libolgx.a -lX11"
  if test $XWIN = YES
   then
    MCD_PROG=xmcd       # xmcd for Xwindows on Sony
    MCD=xmcd_sonyr      # xmcd_Sony source directory
    WINDOWS="  -DXWIN "         # For system with only X windows
    RANGE=          # Range not needed with X
    WINLIBS=" -lX11"        # X window library
  fi
#
# Put any other SONY defines here
  XOFF="set -"          # how to you turn off set -x in /bin/sh
  NODIFFMK=y            # SONY doesn't have diffmk
fi
#
################################################################################
################################################################################
#
# You might want to change these.
#
# if you have a "typeset" command (itroff, iroff, vtroff, etc)
# define it here.
VTROFF=itroff
#
# define your default pager here.  Most people use more.
DEFAULT_PAGER=more
#
################################################################################
#
# leave these alone
#
if test x$SUNOS != x
 then
  SUNOSLEVEL=-D$SUNOS
fi
LIBCFLAGS="-O $MORECFLAGS $DEFINES $NOPAD $HFLAG -DLIB -DSCCS -I$SINCP $LOCAL -D$MACH $FLOAT"
LIBFFLAGS="-O $HFLAG $FLOAT"
OLIBCFLAGS="-O $MORECFLAGS $DEFINES $NOPAD $HFLAG -DLIB -DSCCS -I$SINCP $LOCAL -D$MACH $FLOAT"
PROGCFLAGS="$MORECFLAGS $LOCAL $DEFINES $NOPAD $HFLAG -DSCCS -DNO_LIC -I$SINCP -D$MACH $FLOAT $SUNOSLEVEL"
PROGFFLAGS="$HFLAG $FLOAT"
#
LIBLINTFLAGS="$DEFINES -DLIB -I$SINCP $LOCAL -D$MACH"
LINTFLAGS="$DEFINES -I$SINCP -D$MACH"
#
# comment this out if you don't want to install the programs (perhaps)
# for testing purposes
#INSTALL=install
#
SRCDIR=${SPSDIR}/general/src
#
# end of installation variables
################################################################################
#
[ -n "$SUNOS" ] && echo Sun OS level is $SUNOS
echo PROGCFLAGS is $PROGCFLAGS
#
#  Nothing below here to change
#
HERE=`pwd`
PATH="$HERE:$PATH"
export PATH

#cd src
umask 022

if test $CFLAG = 0
then
 if test ! -d $SPSDIR
 then
   echo $SPSDIR doesn\'t exist, trying to make it...
   echo mkdir -p $SPSDIR
   mkdir -p $SPSDIR || exit 1
   chmod $SPSMOD $SPSDIR
 fi
echo ESPS Version: $ESPS_VERSION - Waves+ Version: $WAVES_VERSION >${SPSDIR}/version

 if test ! -d $SINCP
  then
   echo $SINCP doesn\'t exist, trying to make it...
   echo mkdir -p $SINCP $SINC
   mkdir -p $SINCP $SINC || exit 1
   chmod $SINCMOD $SINP $SINC
 fi

 if test x$DOLOCAL = xy
  then
  if test ! -d $SINCLP
   then
    echo $SINCLP doesn\'t exist, trying to make it...
    echo mkdir -p $SINCLP $SINCL
    mkdir -p $SINCLP $SINCL || exit 1
    chmod $SINCMOD $SINCLP $SINCL
  fi
 fi

 if test ! -d $LIBDIR
  then
   echo $LIBDIR doesn\'t exist, trying to make it...
   echo mkdir -p $LIBDIR
   mkdir -p $LIBDIR || exit 1
   chmod $LIBDIRMOD $LIBDIR
 fi

 for dir in $MENUDIR $FILTDIR $FILESDIR $PARAMSDIR $KEYDIR $COLORMAPDIR \
    $FIXEDFONTDIR
 do
  if test ! -d $dir
  then
   echo $dir doesn\`t exist, trying to make it...
   echo mkdir -p $dir
   mkdir -p $dir || exit 1
   chmod $LIBDIRMOD $dir
  fi
 done


 if test ! -d $WAVESDIR
  then
   echo $WAVESDIR doesn\'t exist, trying to make it...
   echo mkdir -p $WAVESDIR
   mkdir -p $WAVESDIR || exit 1
   chmod $LIBDIRMOD $WAVESDIR
 fi

 for dir in $WAVESMENUS $WAVESFILES
 do
  if test ! -d $dir
  then
   echo $dir doesn\`t exist, trying to make it...
   echo mkdir -p $dir
   mkdir -p $dir || exit 1
   chmod $LIBDIRMOD $dir
  fi
 done


 if test ! -d $WAVESDIR/colormaps
  then
   echo $WAVESDIR/colormaps doesn\'t exist, trying to make it...
   echo mkdir $WAVESDIR/colormaps
   mkdir -p $WAVESDIR/colormaps || exit 1
   chmod $LIBDIRMOD $WAVESDIR/colormaps
 fi

 if test ! -d $WAVESDIR/commands
  then
   echo $WAVESDIR/commands doesn\'t exist, trying to make it...
   echo mkdir $WAVESDIR/commands
   mkdir -p $WAVESDIR/commands || exit 1
   chmod $LIBDIRMOD $WAVESDIR/commands
 fi

 if test ! -d $LIBDIR/maclib
  then
   echo $LIBDIR/maclib doesn\'t exist, trying to make it...
   echo mkdir $LIBDIR/maclib
   mkdir -p $LIBDIR/maclib || exit 1
   chmod $LIBDIRMOD $LIBDIR/maclib
 fi

 if test ! -d $LIBDIR/lisp
  then
   echo $LIBDIR/lisp doesn\'t exist, trying to make it...
   echo mkdir $LIBDIR/lisp
   mkdir -p $LIBDIR/lisp || exit 1
   chmod $LIBDIRMOD $LIBDIR/lisp
 fi

 if test ! -d $SPSDIR/doc
 then
  echo mkdir $SPSDIR/doc
  mkdir -p $SPSDIR/doc || exit 1
  chmod $MANDIRMOD $SPSDIR/doc
 fi

 if test ! -d $SPSDIR/doc/waves
 then
  echo mkdir $SPSDIR/doc/waves
  mkdir -p $SPSDIR/doc/waves || exit 1
  chmod $MANDIRMOD $SPSDIR/doc/waves
 fi

 if test ! -d $SPSDIR/demo
 then
  echo mkdir $SPSDIR/demo
  mkdir -p $SPSDIR/demo || exit 1
  chmod $MANDIRMOD $SPSDIR/demo
 fi

 if test ! -d $SPSDIR/newdemos
 then
  echo mkdir $SPSDIR/newdemos
  mkdir -p $SPSDIR/newdemos || exit 1
  chmod $MANDIRMOD $SPSDIR/newdemos
 fi

 if test ! -d $SPSDIR/pub
 then
  echo mkdir -p $SPSDIR/pub
  mkdir -p $SPSDIR/pub || exit 1
  chmod $MANDIRMOD $SPSDIR/pub
 fi

 if test ! -d $SPSDIR/src_examples
 then
  echo mkdir -p $SPSDIR/src_examples
  mkdir -p $SPSDIR/src_examples || exit 1
  chmod $MANDIRMOD $SPSDIR/src_examples
 fi

 if test ! -d $SPSDIR/src_examples/lib
 then
  echo mkdir -p $SPSDIR/src_examples/lib
  mkdir -p $SPSDIR/src_examples/lib || exit 1
  chmod $MANDIRMOD $SPSDIR/src_examples/lib
 fi

 if  test  ! -d $MANDIR
 then
   echo mkdir -p $MANDIR
   mkdir -p $MANDIR || exit 1
 fi
 if test ! -d $MANDIR/man1
 then
   echo mkdir $MANDIR/man1
   mkdir -p $MANDIR/man1 || exit 1
 fi
 if test ! -d $MANDIR/man3
 then
   echo mkdir $MANDIR/man3
   mkdir -p $MANDIR/man3 || exit 1
 fi
 if test ! -d $MANDIR/man5
 then
   echo mkdir $MANDIR/man5
   mkdir -p $MANDIR/man5 || exit 1
 fi
 if test ! -d $MANDIR/cat1
 then
   echo mkdir $MANDIR/cat1
   mkdir -p $MANDIR/cat1 || exit 1
 fi
 if test ! -d $MANDIR/cat3
 then
   echo mkdir $MANDIR/cat3
   mkdir -p $MANDIR/cat3 || exit 1
 fi
 if test ! -d $MANDIR/cat5
 then
   echo mkdir $MANDIR/cat5
   mkdir -p $MANDIR/cat5 || exit 1
 fi

 if test ! -d $SPSDIR/general
  then
   echo ln -s $HERE $SPSDIR/general
   ln -s $HERE $SPSDIR/general
 fi


 chmod $MANDIRMOD $MANDIR $MANDIR/man*
 chmod $CATMOD $MANDIR/cat*

 if  test  ! -d $BINDIR
 then
   echo mkdir -p $BINDIR $OLDBIN
   mkdir -p $BINDIR $OLDBIN || exit 1
   chmod $BINDIRMOD $BINDIR $OLDBIN
 fi
fi

export SPSDIR PARAMDIR SINC LIBDIR WAVESDIR MANDIR BINDIR OLDBIN SPSLIB PROGMOD
export MANMOD HMOD EHDRLIB WHDRLIB SHDRLIB WSPSLIB SSPSLIB XVIEW_B_OPT
export LINTFLAGS LINT SRCDIR  SINCP LLIBNAME LIBNAME LIBMOD
export INSTALL LINTLIB HERE PLOTDIR SINCL SINCLP LOCAL
export PROGCFLAGS LIBCFLAGS OLIBCFLAGS LINTFILE MKLINTLIB LLIBROOT
export VTROFF DEFAULT_PAGER FLOAT DADEV ADDEV CLKDEV TOUCH MAXDA MAXAD
export STRIP LINK MACH LIBFFLAGS PROGFLAGS MINDA MINAD
export MCD_PROG WINLIBS CC LOCALDIR
export CATMOD MANDIRMOD XOFF BINDIRMOD SPOOL_CMD RANLIB EQN WINDOWS XWIN
export LIBMV AUDIOLIB

if test $MACH = MACOS
 then
# This is mostly for the MACOS installation to pick up the little Mplay and Mrecord scripts.
  cp -f ./scripts/* $BINDIR
  cp -f ../../macAudio/build/audioM $BINDIR
fi

SPSLIB2=$SPSLIB
WSPSLIB2=$WSPSLIB
SSPSLIB2=$SSPSLIB
if test $MACH = SG
 then
  SPSLIB2="$SPSLIB /usr/lib/libsun.a /usr/lib/libbsd.a"
  WSPSLIB2="$WSPSLIB /usr/lib/libsun.a /usr/lib/libbsd.a"
  SSPSLIB2="$SSPSLIB /usr/lib/libsun.a /usr/lib/libbsd.a"
fi

#
if test $CFLAG = 0
then
# if SUN and dynamic link then copy in the Sun xview libraries.
if test x$1 != xnone -a \( $MACH = SUN4 -o $MACH = SUN3 \) -a "x$XVIEW_B_OPT" = x
 then
   echo "Copying Sun shared Xview libraries to $LIBDIR"
   echo "Copying these files: `ls /usr/openwin/lib/lib*.s*`"
   cp /usr/openwin/lib/lib*.s* $LIBDIR
   echo "done copying shared xview libraries."
elif test $MACH = LINUX -o $MACH = MACOS; then

# We try to link xwaves to static xview libraries if possible, so
# that the binaries will run on machines without xview installed.  Reorder
# the 'if's and 'else's below to change this preference.  First we check to
# see whether xview is installed.
  if ld -Bstatic -r -lxview -lolgx 2>/dev/null ; then
    XV_STAT_OR_DYN=static
  elif ld -Bdynamic -r -lxview -lolgx 2>/dev/null ; then
    XV_STAT_OR_DYN=dynamic
  else XV_STAT_OR_DYN=""
  fi
  if [ -n "$XV_STAT_OR_DYN" ] ; then
    echo "Xview libraries found in linker path, we don't need to add them"
    echo "to the ESPS library directory"
    XVIEW_LIB="-lxview -lolgx"
    if [ "$XV_STAT_OR_DYN" = "static" ] ; then
        XVIEW_LIB="-Wl,-Bstatic "$XVIEW_LIB" -Wl,-Bdynamic"
    fi
  else
    echo "Error: Xview libraries not found in linker path."; exit 1
  fi # [ -n "$XV_STAT_OR_DYN" ]
XVIEW_LIB="$XVIEW_LIB $X_UTIL $WINLIBS"
echo XVIEW_LIB is $XVIEW_LIB
# Is there an xview directory in the include path?
  if echo "#include <xview/xview.h>" |cpp >/dev/null 2>&1 ; then
    echo "Xview include files present in include path, we don't need to add them"
  else
    echo "Error: Xview include files not found in path,"; exit 1
    echo "include directory"
  fi
  XVIEW_INC="$SINCP"
else
   echo "Not installing shared Xview libraries."
fi # test $MACH = LINUX || MACOS
fi # test $CFLAG = 0

# If a Sun4 then we will ship copies of the Xview include files too.
#
if test $CFLAG=0
then
  if test $MACH = SUN4
  then
    echo "Copying Sun /usr/openwin/include files along as well..."
    if test ! -d $SPSDIR/include/xview
    then
      mkdir -p $SPSDIR/include/xview || exit 1
    fi
    cp -r /usr/openwin/include/xview/* ${SPSDIR}/include/xview
  fi
fi

rm -f $HERE/emake
echo '#! /bin/sh' > $HERE/emake
echo exec make \\ >> $HERE/emake
echo  CLEAN=$CLEAN \\ >> $HERE/emake
echo  SPSDIR=$SPSDIR \\ >> $HERE/emake
echo  BINDIR=$BINDIR \\ >> $HERE/emake
echo  MANDIR=$MANDIR \\ >> $HERE/emake
echo  LIBDIR=$LIBDIR \\ >> $HERE/emake
echo  PARAMDIR=$LIBDIR/params \\ >> $HERE/emake
echo  WAVESDIR=$WAVESDIR \\ >> $HERE/emake
echo  PROGMOD=$PROGMOD \\ >> $HERE/emake
echo  MANMOD=$MANMOD \\ >> $HERE/emake
echo  OLDBIN=$OLDBIN \\ >> $HERE/emake
echo  SPSLIB=\"$SPSLIB2\" \\ >> $HERE/emake
echo  WSPSLIB=\"$WSPSLIB2\" \\ >> $HERE/emake
echo  NSPSLIB=\"$NSPSLIB\" \\ >> $HERE/emake
echo  SSPSLIB=\"$SSPSLIB2\" \\ >> $HERE/emake
echo  PROGCFLAGS=\"$PROGCFLAGS\" \\ >> $HERE/emake
echo  LINT=\"$LINT\" \\ >> $HERE/emake
echo  LINTFLAGS=\"$LINTFLAGS\" \\ >> $HERE/emake
echo  STRIP=\"$STRIP\" \\ >> $HERE/emake
echo  LINK=\"$LINK\" \\ >> $HERE/emake
echo  SINC=$SINC \\ >> $HERE/emake
echo  LINTLIB=$LINTLIB \\ >> $HERE/emake
echo  PLOTDIR=$PLOTDIR \\ >> $HERE/emake
echo  LIBNAME=$LIBNAME \\ >> $HERE/emake
echo  LLIBNAME=$LLIBNAME \\ >> $HERE/emake
echo  LIBCFLAGS=\"$LIBCFLAGS\" \\ >> $HERE/emake
echo  LIBFFLAGS=\"$LIBFFLAGS\" \\ >> $HERE/emake
echo  PROGFFLAGS=\"$PROGFFLAGS\" \\ >> $HERE/emake
echo  OLIBCFLAGS=\"$OLIBCFLAGS\" \\ >> $HERE/emake
echo  LIBMOD=$LIBMOD \\ >> $HERE/emake
echo  LINTFILE=$LINTFILE \\ >> $HERE/emake
echo  DEFAULT_PAGER=$DEFAULT_PAGER \\ >> $HERE/emake
echo  VTROFF=$VTROFF \\ >> $HERE/emake
echo  MACH=$MACH \\ >> $HERE/emake
echo  FLOAT=$FLOAT \\ >> $HERE/emake
echo  MKLINTLIB=\"$MKLINTLIB\" \\ >> $HERE/emake
echo  CLKDEV=\"$CLKDEV\" \\ >> $HERE/emake
echo  ADDEV=\"$ADDEV\" \\ >> $HERE/emake
echo  DADEV=\"$DADEV\" \\ >> $HERE/emake
echo  MAXAD=$MAXAD \\ >> $HERE/emake
echo  MAXDA=$MAXDA \\ >> $HERE/emake
echo  MINAD=$MINAD \\ >> $HERE/emake
echo  MINDA=$MINDA \\ >> $HERE/emake
echo  ADTYPE=\"$ADTYPE\" \\ >> $HERE/emake
echo  PLOTCOMMAND=\"$PLOTCOMMAND\" \\ >> $HERE/emake
echo  MCD=\"$MCD_PROG\" \\ >> $HERE/emake
echo  HMOD=$HMOD \\ >> $HERE/emake
echo  WINLIBS=\"$WINLIBS\" \\ >> $HERE/emake
echo  CC=\"$CC\" \\ >> $HERE/emake
echo  ANSI_CC=\"$ANSI_CC\" \\ >> $HERE/emake
echo  ELM_CC=\"$ELM_CC\" \\ >> $HERE/emake
echo  SPOOL_CMD=\"$SPOOL_CMD\" \\ >> $HERE/emake
echo  RANLIB=\"$RANLIB\" \\ >> $HERE/emake
echo  EQN=$EQN \\ >> $HERE/emake
echo  WINDOWS=\"$WINDOWS\" \\ >> $HERE/emake
echo  XVIEW_INC=\"$XVIEW_INC\" \\ >> $HERE/emake
echo  X_LIB=\"$X_LIB\" \\ >> $HERE/emake
echo  X_INC=\"$X_INC\" \\ >> $HERE/emake
echo  XVIEW_LIB=\"$XVIEW_LIB\" \\ >> $HERE/emake
echo  XWIN=\"$XWIN\" \\ >> $HERE/emake
echo  EHDRLIB=\"$EHDRLIB\" \\ >> $HERE/emake
echo  SHDRLIB=\"$SHDRLIB\" \\ >> $HERE/emake
echo  EXVLIB=\"$EXVLIB\" \\ >> $HERE/emake
echo  WHDRLIB=\"$WHDRLIB\" \\ >> $HERE/emake
echo  NHDRLIB=\"$NHDRLIB\" \\ >> $HERE/emake
echo  XVIEW_B_OPT=\"$XVIEW_B_OPT\" \\ >> $HERE/emake
echo  BSDLIB=\"$BSDLIB\" \\ >> $HERE/emake
echo  LIBMV=\"$LIBMV\" \\ >> $HERE/emake
echo  AUDIOLIB=\"$AUDIOLIB\" \\ >> $HERE/emake
echo  \$* >> $HERE/emake

chmod 0755 $HERE/emake

if test $NODIFFMK = y
 then
  echo making fake diffmk ...
  echo "echo No diffmk" >$HERE/diffmk
  chmod 0755 $HERE/diffmk
  rm -f $BINDIR/diffmk
  cp $HERE/diffmk $BINDIR/diffmk
  chmod $PROGMOD $BINDIR/diffmk
else
  ( DM=`which diffmk 2>/dev/null` && [ "$DM" != "$OLDESPS_BASE/bin/diffmk" ] \
   &&  [ ! -e $BINDIR/diffmk ] ) || \
    ( echo "installing diffmk"; cp ../diffmk $BINDIR/diffmk; \
        chmod $PROGMOD $BINDIR/diffmk )
fi
