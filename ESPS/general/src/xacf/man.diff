.\" Copyright (c) 1987, 1990 Entropic Speech, Inc.; All rights reserved
.\" @(#)xacf.1	1.4 08 Apr 1997 ERL
.TH XACF \1-ESPS 11/10/90
.ds ]W "\fI\s+4\ze\h'0.05'e\s-4\v'-0.4m'\fP\(*p\v'0.4m'\ Entropic Speech, Inc.
.SH "NAME"
.nf 
xacf \- X-window interface for acoustic feature extractor
.sp
.SH "SYNOPSIS"
.PP
.ft B 
acf [
.BI \-P " param"
] [
.BI \-x " debug_level"
]
.I acf_params
.sp
.SH "DESCRIPTION"
\fIXacf\fP is a graphical interface to the acoustic feature generating
program, \fIacf\fP (1\-\s-1ESPS\s+1).  \fIAcf\fP reads a single channel
FEA_SD file, extracts and windows frames of data, and produces acoustic
features based on each frame (see the ESPS section 1 entry on \fIacf\fP
for a complete description). \fIXacf\fP presents a menu-driven interface
by which all parameters parameters read by \fIacf\fP can be specified.
.PP
When \fIxacf\fP is called, the output parameter file \fIacf_params\fP
is created using the default values for all \fIacf\fP parameters.  If
the \-P option is provided, these default values are taken from the
specified parameter file; otherwise they are taken from the default
file \fIPxacf\fP (this default file is searched for along the path
ESPS_PARAMS_PATH, which in turn by default contains the current
directory followed by $ESPS_BASE/lib/params).  If the output parameter
file exists, it is overwritten.  As the user enters parameter values,
\fIxacf\fP updates the output parameter file with the new values. The
parameter entries can be restored to their default values at any time
by selecting the \fIDEFAULT\fP button. This resets the menu as well as
the values in the output parameter file. After all user parameter
choices have been made, the user can exit \fIxacf\fP by selecting the
\fIDONE\fP button.
.PP
Help is available by selecting either the \fIAcf Man Page\fP or
\fIHelp\fP buttons.  The \fIHelp\fP button produces this document.
.PP
Several of the features computed by \fIacf\fP share parameters.
The autocorrelation, line spectral frequencies, log area ratios,
linear prediction coefficients, and reflection coefficients are 
all computed from the autocorrelation and all have the same order.
The \fIorder\fP entries for each of these features in the \fIxacf\fP 
are therefore
forced to have the same value; updating one changes all. Similarly,
the bilinear transformation is applied to
the FFT cepstrum and LPC cepstrum with the same 
warping parameter.  The warping parameter fields in the \fIxacf\fP menu 
for these two features are forced to take the same value.
.PP
An output file must be specified; standard output is not allowed.
.PP
\fBUSAGE NOTES\fP
.br
The following sequence of commands is an example of using \fIxacf\fP to
generate parameters for \fIacf\fP:
.sp
xacf acf_params 
.br
acf \-P acf_params speech.sd speech.fea
.sp
\fIXacf\fP first creates the parameter file \fIacf_params\fP based 
on user input. \fIAcf\fP processes the FEA_SD file \fIspeech.sd\fP
using this parameter file to produce the FEA file of acoustic features,
\fIspeech.fea\fP.
.PP
There are several interface styles in the menu presented by \fIxacf\fP. 
Push button items (YES/NO selections) are selected by mouse click.  The choice
of window to apply to the data is selected by using the mouse to choose 
one item from the list of possible windows.  Text items, such as the frame
length or various fieldnames, are entered by selecting a field by
mouse button click and typing in the desired value.  Note that for text
items, 
the output parameter file is not updated until a carriage return is typed.
For the other interface styles, the output parameter file is updated 
immediately.
.PP
Note that it is possible to enter values for the parameters \fIstart\fP and 
\fInan\fP, but that these values are overriden by \fIacf\fP command line options.
.PP
\fBUSE WITH WAVES+\fP
.br
\fIXacf\fP can be used with \fIxwaves\fP (1\-\s-1ESPS\s+1).  Suppose the 
shell script \fIdo_acf\fP contains the following commands
.sp
#! /bin/sh
.br
xacf acf_params
.br
acf -P acf_params -r $1 $2 $3
.sp
Entering \fB add_espsf name features command do_acf\fP
at the \fIxwaves\fP command prompt adds the option \fBfeatures\fP to the
\fIxwaves\fP menu.  If this new option is selected, 
\fIdo_acf\fP is executed.  The \fIxacf\fP menu appears and, when the
user finishes entering parameter values, \fIacf\fP processes the selected
time series segment to produce the acoustic
features specified by the parameter values in \fIacf_params\fP. When 
\fIacf\fP is finished processing, \fIxwaves+\fP displays the acoustic
features. See the \fIxwaves\fP (1\-\s-1ESPS\s+1) entry for a more
detailed description.  Note that the \fIxwaves\fP values for
parameters \fIstart\fP and \fInan\fP are obtained from 
the command line, so entries for these values made in \fIxacf\fP are 
ignored.
.sp
.SH "OPTIONS"
.PP
.TP
.BI \-P " param"
If this option is specified, the default parameter values presented
by \fIxacf\fP are taken from the file \fIparam\fP.  Otherwise, they
are taken from the file \fIparam\fP.
.TP
.BI \-x " debug_level" "\fR [0]"
A positive value specifies that debugging output be printed on the
standard error output. Larger values result in more output. The
default is 0, for no output.
.sp 
.SH "ESPS PARAMETERS"
.PP
The parameters read by \fIxacf\fP are used as the default entries
in the selections presented by \fIxacf\fP.  As such, the parameters 
read by 
\fIxacf\fP are identical to those read by \fIacf\fP, and are described
here as they are used by \fIacf\fP.
.PP
The following parameters are read from the appropriate parameter file: 
.TP
.I "sd_field_name \- string"
.IP
Specifies the name of the field in the input file \fIsd_file\fP which
contains the sampled data.  The default field name is "sd".
.TP
.I "units \- string"
.IP
Specifies whether the units of the parameters \fIstart\fP, \fInan\fP,
\fIframe_len\fP, and \fIstep\fP are in seconds or samples.  There
are two valid values for \fIunits\fP: "seconds" or "samples". If
"seconds" is specified, the header item \fIrecord_freq\fP is used
to convert the specified values in seconds to an equivalent number of
samples.  If "seconds" is specified and the field \fIrecord_freq\fP is 
not defined in the input header, or is 0, \fIacf\fP warns and exits.  
The default value is "samples". This parameter is not read by \fIacf\fP if
it is called with the \fB\-r\fP or the \fB\-s\fP option.
.TP
.I "start \- float"
.IP
The first point in the input sampled data file that is processed.  The
first sample in the file is denoted by 1 if \fIunits\fP="samples" or
by 0 if \fIunits\fP="seconds".
If it is not in the parameter
(or Common) file, the default is to begin processing at the begining
of the file. 
This parameter is not read by \fIacf\fP if it is called with 
the \fB\-r\fP or the \fB\-s\fP option.
.TP
.I "nan - float"
.IP
The total amount of data to process.  If 
.I nan
is 0 and the input is not a pipe, the whole file is processed.
If \fInan\fP
is 0 and the input is a pipe, \fIacf\fP warns and 
exits.
\fINan\fP
is read by \fIacf\fP only if the \fB\-r\fP option is not used.  
.TP
.I "frame_len \- float"
.IP
The length of each frame.  
A value of 0 indicates that a single frame of length
.I nan
is processed; this is also the default value in case
.I frame_len
is not specified in the parameter file.
.TP
.I "step \- float"
.IP
Initial points of consecutive frames are separated by this amount.
If the option is omitted and no value is found in the parameter file,
a default equal to
.I frame_len
is used (resulting in exactly abutted frames).
.TP
.I "preemphasis \- float"
.IP
If \fIpreemphasis\fP is not equal 0.0, the first order preemphasis
filter
.br 
(1 - (\fIpreemphasis\fP) z^(-1)) is applied to the data.  The
preemphasis factor must be between 0 and 1; if not, \fIacf\fP warns
and exits.
.TP
.I "window_type \- string"
.IP
The data window to apply to the data.
If the option is omitted and if no value is found in the parameter file,
the default used is "RECT", for a rectangular window with amplitude one.
Other acceptable values include
"HAMMING", for Hamming, and "TRIANG", for triangular;
see the window(3-ESPS) manual page for the complete list.
.TP
.I "sd_flag \- integer" 
.TP
.I "sd_fname \- string"
.IP
If \fIsd_flag\fP is set to 1, the frame of windowed data is stored 
in the output records of \fIfea_file\fP; by default, this is not done.
If \fIsd_fname\fP is defined in the parameter file,
its value specifies the name of the field in which the windowed data
is stored.  The default field name is "sd".
.TP
.I "pwr_flag \- integer"
.TP
.I "pwr_fname \- string"
.IP
If \fIpwr_flag\fP is set to 1, the power in each windowed frame of data
is computed and stored in \fIfea_file\fP.  The
power is the sum of the squared values of the windowed data divided by
the number of points in the current frame.  The power of each frame is
stored in the field "power", unless \fIpwr_fname\fP is assigned a
different name.
.TP
.I "zc_flag \- integer"
.TP
.I "zc_fname \- string"
.IP 
If \fIzc_flag\fP is set to 1, the zero-crossings in each windowed
frame of data are computed and stored in \fIfea_file\fP.  The
zero-crossings are computed as in the program \fIzcross\fP (1-ESPS).
The number of zero-crossings in each frame is  stored in the field
"zero_crossing", unless 
\fIzc_fname\fP is assigned a different name.
.TP
.I "ac_flag \- integer"
.TP 
.I "ac_fname \- string"
.TP
.I "ac_order \- int"
.IP
If \fIac_flag\fP is set to 1, the sample autocorrelation of the
windowed data 
frame for lags 0,...,\fIac_order\fP is found using \fIget_auto\fP
(3-ESPS).  The data is stored in the field "auto_corr", unless
\fIac_fname\fP is assigned a different name.  The output field has
data type REAL and dimension \fIac_order\fP+1. If \fIac_order\fP=0,
a warning message is printed.
.TP
.I "rc_flag \- integer"
.TP
.I "rc_fname \- string"
.IP
If \fIrc_flag\fP is set to 1, reflection coefficients are
found from the sample autocorrelation of the windowed data frame 
using \fIget_atal\fP(3-ESPS). 
The parameter \fIac_order\fP determines the number of reflection
coefficients which are computed. If \fIac_order\fP=0, a warning
message is printed.  The reflection coefficients are stored in the
field "refcof", unless \fIrc_fname\fP is assigned a different name.
The field has data type REAL and dimension \fIac_order\fP.
.TP 
.I "lpc_flag \- integer"
.TP
.I "lpc_fname \- string"
.IP
If \fIlpc_flag\fP is set to 1, linear prediction coefficients
are found from the sample autocorrelation of the windowed data frame
using \fIget_atal\fP (3-ESPS). 
The parameter \fIac_order\fP determines the number of prediction 
coefficients which are computed. If \fIac_order\fP=0, a warning
message is printed.  The coefficients are stored in the
field "lpc_coeffs", unless \fIlpc_fname\fP is assigned a different name.
The field has data type REAL and dimension \fIac_order\fP.
.TP 
.I "lpccep_flag \- integer"
.TP
.I "lpccep_fname \- string"
.TP
.I "lpccep_order \- integer"
.TP
.I "lpccep_deriv \- string"
.IP
If \fIlpccep_flag\fP is set to 1, cepstral coefficients
are computed from the reflection coefficients found from the windowed
data frame. The reflection coefficients are found as above, and the 
cepstral coeffiecients are obtained using \fIrc_reps\fP (3-ESPS).
The parameter \fIlpccep_order\fP determines the number of 
cepstral coefficients which are computed. If \fIlpccep_order\fP=0, a
warning message is printed.  The cepstral coefficients are stored in the
field "lpc_cepstrum", unless \fIlpccep_fname\fP is assigned a
different name. The field has data type REAL and, if 
\fIlpccep_deriv\fP 
is not specified, has dimension \fIlpccep_order\fP. If the string 
\fIlpccep_deriv\fP is defined, the routine
\fIgrange_switch\fP (3-ESPS) is used to to parse the string to determine
which elements of the \fIlpccep_order\fP cepstral coefficients are
to form the output field. For example if the entry 
.br
\fBstring lpccep_deriv = "1,11:20";\fP
.br
appears in the parameter file,
the output field has 21 elements taken from positions 0, and 11 through
20 in the cepstral sequence.  If \fIlpccep_deriv\fP specifies 
points outside the range [0:\fIlpccep_order\fP-1], \fIacf\fP 
prints a warning and exits.
.TP
.I "lar_flag \- integer"
.TP
.I "lar_fname \- string"
.IP
If \fIlar_flag\fP is set to 1, log area ratios (LARs)
are computed from the reflection coefficients found from the windowed
data frame. The reflection coefficients are found as above, and the 
LARs are obtained using \fIrc_reps\fP (3-ESPS).
The parameter \fIac_order\fP determines the number of 
LARs which are computed. If \fIac_order\fP=0, a
warning message is printed.  The LARs are stored in the
field "log_area_ratio", unless \fIlar_fname\fP is assigned a
different name. The field has data type REAL and dimension
\fIac_order\fP. 
.TP
.I "lsf_flag \- integer"
.TP
.I "lsf_freq_res \- float"
.TP
.I "lsf_fname \- string"
.IP
If \fIlsf_flag\fP is set to 1, line spectral frequencies
(LSFs) 
are computed from the reflection coefficients found from the windowed
data frame. The reflection coefficients are found as above, and the 
LSFs are obtained using \fIrc_reps\fP (3-ESPS).
The parameter \fIac_order\fP determines the number of 
LSFs which are computed. If \fIac_order\fP=0, a
warning message is printed.  The LSFs are stored in the
field "line_spec_freq", unless \fIlsf_fname\fP is assigned a
different name. The field has data type REAL and dimension
\fIac_order\fP. The parameter \fIlsf_freq_res\fP has default value
10.0 (see \fIrc_reps\fP (3-ESPS)).
.TP
.I "fftcep_flag \- integer"
.TP
.I "fftcep_fname \- string"
.TP
.I "fftcep_order \- integer"
.TP
.I "fftcep_deriv \- string"
.IP
If \fIfftcep_flag\fP is set to 1, the FFT cepstrum is 
computed from the windowed data frame using the routine
\fIfft_cepstrum_r\fP (3-ESPS). 
The cepstral data is stored in the
field "fft_cepstrum", unless \fIfftcep_fname\fP is assigned a
different name.
The parameter \fIfftcep_order\fP determines the order of the FFT, i.e.
the FFT produces 2^\fIfftcep_order\fP frequencies.
If \fIfftcep_order\fP=0, a
warning message is printed.  The field has data type REAL and, if 
\fIfftcep_deriv\fP 
is not specified, has dimension 2^\fIfftcep_order\fP. If the string 
\fIfftcep_deriv\fP is defined, the routine
\fIgrange_switch\fP (3-ESPS) is used to to parse the string to determine
which elements of the 2^\fIfftcep_order\fP cepstral coefficients are
to form the output field. For example if the entry 
.br
\fBstring fftcep_deriv = "1,11:20";\fP 
.br
appears in the parameter file,
the output field has 21 elements taken from positions 0, and 11 through
20 in the cepstral sequence.  If \fIfftcep_deriv\fP specifies 
points outside the range (0:2^(\fIfftcep_order\fP)-1), \fIacf\fP 
prints a warning and exits.
.TP
.I "fft_flag \- integer"
.TP
.I "fft_order \- integer"
.IP
If the flag \fIfft_flag\fP is set to 1, the FFT of the windowed data
frame is stored in \fIfea_file\fP.  The order of the FFT is
\fIfft_order\fP, i.e. 2^\fIfft_order\fP negative and positive
frequencies are computed.  If \fIfft_flag\fP is set, \fIfea_file\fP
has FEA subtype FEA_SPEC, and the data format is SPFMT_SYM_EDGE, 
and is stored in decibels (log power) (see FEA_SPEC (5-ESPS)).
If \fIfft_order\fP = 0, a warning message is printed; the default
values of \fIfft_order\fP is 10.
.TP
.I "warping_param \- float"
.IP
If \fIwarping_param\fP is not 0.0, the bilinear transform routine
\fIblt\fP (3-ESPS) is applied to all the following acoustic
features being computed: lpc cepstrum, FFT cepstrum, FFT complex
cepstrum. The routine is applied using the parameter
\fIwarping_param\fP. If the parameter is outside the range (-1,1),
\fiacf\fP warns and exits.
.PP
The values of parameters obtained from the parameter file are printed
if the environment variable ESPS_VERBOSE is 3 or greater.  The default
value is 0.
.sp
.SH "ESPS COMMON"
.PP
ESPS Common is not read.
.sp
.SH "ESPS HEADER"
.PP
The parameter file \fIacf_params\fP produced by \fIxacf\fP is an ASCII
file and has no ESPS header.  A comment is inserted in 
\fIacf_params\fP which indicates the time and date of the most recent
change made by \fIxacf\fP.
.sp
.SH "SEE ALSO"
.PP
.nf
\fIacf\fP(1\-\s-1ESPS\s+1), \fIexprompt\fP(1\-\s-1ESPS\s+1), \fIxwaves\fP(1\-\s-1ESPS\s+1)
.fi
.sp
.SH "BUGS"
.PP
If you do not type a RETURN in an entry field, the entry will not
"take" \- i.e., the output parameter file will not contain the 
new entry. 
.sp
.SH "FUTURE CHANGES"
.PP

.sp
.SH "AUTHOR"
.PP
Man page and program by Bill Byrne.

