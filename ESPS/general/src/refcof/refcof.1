.\" Copyright (c) 1986-1996 Entropic Speech, Inc.
.\" Copyright (c) 1996 Entropic Research Laboratory, Inc.; All rights reserved
.TH REFCOF 1\-ESPS 01 Oct 1998
.ds ]W (c) 1996 Entropic Research Laboratory, Inc.
.\" @(#)refcof.1	3.36 01 Oct 1998 ESI/ERL
.SH "NAME"
.nf
refcof - computes LPC reflection coefficients via various spectrum analysis methods

xrefcof\- run \fIrefcof\fP with X Windows interactions and displays
.SH SYNOPSIS
.B refcof
[
.BI \-P " param"
] [
.BI \-p " range"
] [
.BI \-r " range
] [
.BI \-l " frame_len"
] [
.BI \-S " step"
] [
.BI \-w " window_type"
] [ 
.BI \-m " method"
] [
.BI \-o " order"
] [
.BI \-e " preemphasis"
] [
.BI \-c " conv_test"
] [
.BI \-i " max_iter"
] [
.BI \-s " sinc_n"
] [
.B \-d
] [
.B \-Z
] [
.B \-z
] [
.BI \-x " debug_level"
]
.I file.sd file.rc
.br

.B xrefcof
[
.BI \-{rp} " range"
]
.I sd_file
.sp
.SH DESCRIPTION
.PP
.I refcof
takes an ESPS sampled data file,
.I file.sd,
and produces an ESPS FEA_ANA analysis file
.I file.rc
containing the reflection coefficients corresponding to one or 
more fixed-length sampled-data frames.  
.PP
All input frames have the same length
.I frame_len
(see
.B \-l
option).
The initial point of the first frame is determined by 
the \fB\-p\fP option or by \fIstart\fP in the parameter file.  
Initial points of any subsequent frames follow at equal intervals
.I step
(see
.B \-S
option).
Thus the 3 cases
.IR step " < " frame_len,
.IR step " = " frame_len,
and
.IR step " > " frame_len,
correspond to overlapping frames, exactly abutted frames,
and frames separated by gaps.
.PP
The number of frames
is the minimum sufficient to cover a specified range of
.I nan
points (see
.B \-p
and 
.B \-Z
options), given \fIframe_len\fP and \fIstep\fP.  The last frame in
each file may overrun the range, in which case a warning is printed.
If a frame overruns the end of a file, it is normally filled out with
zeros (but see \fB-Z\fP).
.PP
The reflection coefficients, along with the computed values for
.I raw_power
and
.I lpc_power,
are then stored in FEA_ANA records.  No pitch pulse information is
written to the file.
.PP
If 
.I file.sd
is "\-" then the input is read from the standard input and if
.I file.rc
is "\-" then the output is directed to the standard output.
.PP
The following spectrum analysis methods are available:
.na
.nh
.IP
Autocorrelation Method (AUTOC) \- see \fIget_auto\fP(3\-\s-1ESPS\s+1)
.IP
Covariance Method (COV) \- see \fIcovar\fP(3\-\s-1ESPS\s+1)
.IP
Burg Method (BURG) \- see \fIget_burg\fP(3\-\s-1ESPS\s+1)
.IP
Modified Burg Method (MBURG) \- see \fIget_burg\fP(3\-\s-1ESPS\s+1)
.IP
Fast Modified Burg Method (FBURG) \- \fIget_fburg\fP(3\-\s-1ESPS\s+1)
.IP
Structured Covariance Methods (STRCOV and STRCOV1) \- see
\fIstrcov_auto\fP(3\-\s-1ESPS\s+1),
\fIstruct_cov\fP(3\-\s-1ESPS\s+1), and \fIgenburg\fP(3\-\s-1ESPS\s+1)
.IP
Vector Burg Method (VBURG) (fast approximation to structured 
covariance) \- see \fIget_vburg\fP(3\-\s-1ESPS\s+1)
.hy
.ad
.PP
By default, the program uses the autocorrelation method, which
applies the standard method of computing the autocorrelation function
and the Levinson algorithm for computing the reflection coefficients
from the autocorrelation values.  Note that the standard
autocorrelation method may yield poor results when using a small
number (i.e. < 100) of data samples.  The other methods can be
specified by using the \fB\-m\fP option.  The most accurate usually 
is STRCOV, especially for small frame lengths.  
.PP
The methods AUTOC, STRCOV, and STRCOV1 operate by estimating the
autocorrelation function and then transforming to reflection
coefficients.  In these cases, the program can also optionally
multiply the autocorrelation function by a sinc function (\fB\-s\fP
option) prior to computing the reflection coefficients.  
This has the effect of reducing the spectral resolution if the
spectrum of these coefficients is plotted.
.PP
Of the two structured covariance methods [2], STRCOV is consderably faster
and better behaved than STRCOV1.  We include STRCOV1 as it may be
useful in certain cases.  STRCOV uses a fast, single channel algorithm
\fIstruct_cov\fP (3\-\s-1ESPS\s+1) developed by John Burg and
programmed by Bernard Fraenkel.  STRCOV2 uses an older (but more
general) algorithm \fIgenburg\fP (3\-\s-1ESPS\s+1) that was
programmed by Daniel Wenger.  Note that the \fB-c\fP and \fB-i\fP
options are relevant for controlling the convergence of STRCOV.
The VBURG method is a fast approximation to structured covariance 
that was developed and programmed by John Burg and Shankar Narayan
[3]. 
.PP
If spectral representations other than reflection coefficients
are desired, use 
.I transpec
(1\-ESPS) or
.I spectrans 
(1\-ESPS) on the output of 
.I refcof.
If you want the actual spectrum, use 
.I me_spec
(1\-ESPS) on the output of 
.I refcof. 
.PP
\fIxrefcof\fP is a script that runs \fIrefcof\fP on a single frame of
data that is specified by the range option (\fB-r\fP or \fB-p\fP) or
by means of ESPS Common.  A pop-up window is used to prompt the user
for \fIwindow_type\fP, \fImethod\fP, \fIorder\fP, \fIconv_test\fP, and
\fImax_iter\fP.  The results of the \fIanalysis\fP are displayed in
two pop-up windows \- one containing the reflection coefficents, and
one containing a maximum-entropy power spectrum computed from these
reflection coeffiecients.  \fIxrefcof\fP makes used of \fIexprompt\fP
(1\-\s-1ESPS\s+1), \fIme_spec\fP (1\-\s-1ESPS\s+1), \fIplotspec\fP
(1\-\s-1ESPS\s+1), and \fIxtext\fP (1\-\s-1ESPS\s+1).
.PP
The parameter prompting for \fIxrefcof\fP is performed by means of the
parameter file named PWrefcof, which is normally obtained from
$ESPS_BASE/lib/params.  However, if you have a file by this name in
the current directory (or if you define the environment variable
ESPS_PARAMS_PATH and put one on that path), it will be used instead.
.SH OPTIONS
The following options are supported (only \fB-r\fP or \fB-p\fP can 
be given for \fIxrefcof\fP):  
.TP
.BI \-P " param"
uses the parameter file 
.I param
rather than the default, which is
.I params.
.TP
.BI \-p " first" : "last"
.TP
.BI \-p " first\-last"
.TP
.BI \-p " first" :+ "incr" "\fR [1:+999]"
In the first two forms, a pair of unsigned integers specifies the range of
sampled data to analyze.  If 
.IR last " = " first " + " incr,
the third form (with the plus sign) specifies the same range as the
first two forms.  If 
.I first
is omitted, the default value of 1 is used.  If 
.I last
is omitted, then a default frame length of 1000 results.  If the
specified range contains points not in the file, the last frame is
truncated to fit the actual data.  Both forms of the option override
the values of
.I start
and
.I nan
in the parameter file or ESPS Common file.  If the \fB\-p\fP option is
not used, the range is determined from the ESPS Parameter or Common
file if the appropriate parameters are present.  Note that the default
frame length of 1000 also results if \fInan\fP is not in the parameter
or Common file and if no \fB-p\fP is used.
.TP
.BI \-r " range"
\fB\-r\fP is a synonym for \fB\-p\fP.
.TP
.BI \-l " frame_len" "\fR [0]"
Specifies the length of each frame.  If the option is omitted, the
parameter file is consulted.  A value of 0 (from either the option or
the parameter file) indicates that a single frame of length
.I nan
(see
.BR \-p )
is processed; this is also the default value in case
.I frame_len
is not specified either with the
.B \-l
option or in the parameter file.
.TP
.BI \-S " step" "\fR [" frame_len "\fR]"
Initial points of consecutive frames differ by this number of samples.
If the option is omitted, the parameter file is consulted,
and if no value is found there, a default equal to
.I frame_len
is used (resulting in exactly abutted frames).  (The same default
applies if \fIstep\fP is given a value of 0).  
.TP
.BI \-w " window_type" "\fR[RECT]"
The name of the data window to apply to the data in each frame before
computing reflection coefficients.  If the option is omitted, the
parameter file is consulted, and if no value is found there, the
default used is a rectangular window with amplitude one.  Possible
window types include rectangular ("RECT"), Hamming ("HAMMING"),
Hanning ("HANNING"), cosine (COS4), and triangular ("TRIANG"); see the
window(3-ESPSsp) manual page.  If the last frame is truncated, the
window is applied to the truncated data (e.g., a triangular window is
zero at the start and end of the truncated data).
.TP 
.BI \-m " method\fR[autoc]"
Specifies the spectrum analysis method.  The default is the
autocorrelation method.  Also available are the covariance method
("cov"), Burg method ("burg"), modified Burg method ("mburg"), fast
modified Burg method ("fburg"), stuctured covariance ("strcov" and
"strcov1"), and vector Burg ("vburg", fast approximation to structured
covariance.  Of the two structured covariance methods, the first
("strcov" is considerably faster and better behaved; "strcov1" is
older but included as it may prove useful on occasion.  If "strcov" is
used, the \fB-c\fP and \fB-i\fP options become relevant.  The \fB-m\fP
option overrides the value that may be in the parameter file.  The
default applies only if there is no value in the parameter file.
.TP
.BI \-e " preemphasis\fR[0.0]\fP"
Specifies a preemphasis factor to apply to the input signal.
.TP
.BI \-c " conv_test\fR[1e-5]\fP"
Specifies, for the STRCOV method only (not including STRCOV1), 
a convergence test value.  The lower the value, the smaller the 
change required on each iteration before the estimator terminates, 
and the more iterations that normally will result.  
.TP
.BI \-i " max_iter\fR[20]\fP"
Specifies, for the STRCOV method only (not including STRCOV1), the 
maximum number of iterations that the estimator will run through 
before terminating.  A warning will indicate if the estimator
terminates because max_iter has been exceeded. 
.TP
.BI \-o " order\fR[15]\fP"
Specifies the order (number of reflection coefficients), and
overrides the value that may be in the parameter file.  The default
applies only if there is no value in the parameter file.  
.TP
.BI \-s " sinc_n"
For the AUTOC, STRCOV, and STRCOV1 methods, the autocorrelation 
the autocorrelation function is multiplied by the function
.I sin (x / sinc_n) 
before computing the reflection coefficients.  In the frequency
domain this has the effect of convolving the spectrum with a boxcar
function of width
.I "f / sinc_n,"
where
.I f
is the sampling frequency.  The value of
.I sinc_n
is recorded in a generic header item.
.TP
.B \-d
Specifies that the dc component of each frame is removed before 
the analysis is performed.  DC revmoval takes place before windowing.
.TP
.B \-Z
If the last frame normally would overrun the stated range,
\fIrefcof\fP reads past the range to fill up the last frame; if the 
the last would go past the file end, the frame is filled with zoes. 
Use of \fB-Z\fP, inhibits this behavior by processing one less frame.
The result is that the end of the last frame falls short of the stated
range.  A common use of \fB-Z\fP is to avoid getting unwanted zeros
in training sequences.  
.TP
.B \-z
Specifies that /fIrefcof/fP operate silently, without issuing various 
warnings. 
.TP
.BI \-x " debug_level" "\fR [0]"
A positive value specifies
that debugging output be printed on the standard error output.
Larger values result in more output.
The default is 0, for no output.
.br
.SH ESPS PARAMETERS
.PP
The parameter file is not required to be present, as there are 
default parameter values that apply.  If the parameter file 
does exist, the following parameters are read:
.TP
.I "start - integer"
.IP
The first point in the input sampled data file that is processed.  A
value of 1 denotes the first sample in the file.  This is only read
if the \fB\-p\fP option is not used.  If it is not in the parameter
(or Common) file, the default value of 1 is used.  
.TP
.I "nan - integer"
.IP
The total number of data points to process.  If 
.I nan
is 0, the whole file is processed.  
.I Nan
is read only if the \fB\-p\fP option is not used.  (See the 
discussion under \fB\-l\fP).
.TP
.I "frame_len - integer"
.IP
The number of points in each frame.  This parameter is not read if the
.B \-l
option is specified.  A value of 0 indicates that a single frame of length
.I nan
is processed; this is also the default value in case
.I frame_len
is specified neither with the
.B \-l
option nor in the parameter file.
.TP
.I "step \- integer"
Initial points of consecutive frames differ by this number of samples.
This parameter is not read if the
.B \-S
option is specified.
If the option is omitted and no value is found in the parameter file,
a default equal to
.I frame_len
is used (resulting in exactly abutted frames).
.TP
.I "window_type \- string"
The data window to apply to the data.
This parameter is not read if the command-line option
.B \-w
is specified.
If the option is omitted and if no value is found in the parameter file,
the default used is "RECT", for a rectangular window with amplitude one.
Other acceptable values include
"HAMMING", for Hamming, and "TRIANG", for triangular;
see the window(3-ESPSsp) manual page for the complete list.
.TP
.I "order - integer"
.IP
The number of reflection coefficients computed for each frame of input data.
If no value is given in the file, a default value of 15 is used.  This value 
is not read if the command line option \fB\-o\fP is used.  
.TP
.I "method - string"
.IP
The spectrum analysis method to use.  The available methods are
autocorrelation ("auto"), covariance ("covar"), Burg ("burg"),
modified Burg ("mburg"), fast modified Burg method ("fburg"),
stuctured covariance ("strcov" and "strcov1"), and vector Burg
("vburg", a fast approximation to structured covariance.  If no value
is given in the file, the autocorrelation method is used by default.
The \fImethod\fP is not read from the parameter file if the command
line option \fB\-m\fP is used.
.TP
.I "preemphasis - float"
.IP
The preemphasis factor to be applied to input signal.
.TP
.I "strcov_test - float"
.IP
If STRCOV is used, this is the convergence test value (the lower 
the value, the smaller the change per iteration before termination).  
This is not read if \fB-c\fP is used. 
.TP
.I "strcov_maxiter - int"
.IP
If STRCOV is used, this is the maximum number of iterations allowed
before the estimator terminates.  This is not read if \fB-i\fP is
used.
.PP
The values of parameters obtained from the parameter file are printed
if the environment variable ESPS_VERBOSE is 3 or greater.  The default
value is 3.
.SH ESPS COMMON
.PP
ESPS Common is read provided that Common processing is enabled and 
that the 
.I filename
entry in Common matches 
.I file.sd,
in which case parameters present in Common override values from
the parameter file, which in turn may be overriden by command
line options (see the discussion in ESPS PARAMETERS and under
each option).
Common is not read if 
.I file.sd
is standard input.  
If 
.I file.rc
is not standard output and 
.I file.sd
is not standard input, the Common parameters 
\fIfilename\fP (= file.sd), \fIprog\fP (= refcof), 
.I start,
and
.I nan
are written to ESPS Common.
.PP
ESPS Common processing may be disabled by setting the environment
variable USE_ESPS_COMMON to "off".  The default ESPS Common file 
is .espscom in the user's home directory.  This may be overidden by
setting the environment variable ESPSCOM to the desired path.  User
feedback of Common processing is determined by the environment
variable ESPS_VERBOSE, with 0 causing no feedback and increasing
levels causing increasingly detailed feedback.  If ESPS_VERBOSE is not
defined, a default value of 3 is assumed.
.SH ESPS HEADER
A new file header is created for the FEA_ANA file.  The sampled data header
from the input header is added as a source in the output file header, and
the command line is added as a comment.  The input file \fIfile.sd\fP is
set as the reference header for tags.
.PP
The program writes the usual values into the common part of the
output header.  
.I Refcof
writes the following values into the specified generic header items
in the output FEA_ANA file:
.nf
.sp
\fIorder_vcd\fP = 0
\fIorder_unvcd\fP = order
\fImaxpulses\fP = 1
\fImaxraw\fP = 1
\fImaxlpc\fP = 1
\fIspec_rep\fP = RC
\fIstart\fP = start
\fInan\fP = nan;
\fIfrmlen\fP = frame_len;
\fIsrc_sf\fP = sample frequency of file.sd
.fi
.PP
In addition, the following generic header items are created
and filled with values used by \fIrefcof\fP: \fImethod, window_type, 
DC_removed, step.  \fPAll of these are CODED types, except for \fIstep\fP, 
which is LONG.  If a non-zero preemphasis factor is used, then
the header item \fIpreemphasis\fR of FLOAT type is also written.
.PP
The generic header item \fIstart_time\fP (type DOUBLE) is written in
the output file.  The value written is computed by taking the
\fIstart_time\fP value from the header of the input file (or zero, if
such a header item doesn't exist) and adding to it the offset time
(from the beginning of the input file) of the first point processed
plus one half of \fIframe_len\fP (thus, \fIstart_time\fP is middle of
the first frame, which is appropriate since the output data represent
the entire frame; without this adjustment for \fIframe_len\fP,
\fIwaves\fP+ displays would not line up properly.  
.PP
The generic header item \fIrecord_freq\fP (type DOUBLE) is written in
the output file.  The value is the number of output records per second
of input data.
.SH  SEE ALSO
.PP
\fIget_resid\fP (1\-\s-1ESPS\s+1), \fImask\fP (1\-\s-1ESPS\s+1),
\fIget_f0\fP (1\-\s-1ESPS\s+1), 
.br
\fIps_ana\fP (1\-\s-1ESPS\s+1),
\fItranspec\fP (1\-\s-1ESPS\s+1), \fIspectrans\fP (1\-\s-1ESPS\s+1),
.br
\fIme_spec\fP (1\-\s-1ESPS\s+1), \fIplotspec\fP (1\-\s-1ESPS\s+1),
\fIexprompt\fP (1\-\s-1ESPS\s+1), 
.br
\fIexpromptrun\fP (1\-\s-1ESPS\s+1),
\fIfft\fP (1\-\s-1ESPS\s+1), \fIcompute_rc\fP (3\-\s-1ESPS\s+1),
.br
FEA_ANA (5\-\s-1ESPS\s+1), FEA (5\-\s-1ESPS\s+1), FEA_SD
(5\-\s-1ESPS\s+1)
.sp
.SH BUGS
.PP
None known. The program will not compute reflection coefficients of complex
signals; if presented with complex input data, it will warn and exit.
.SH FUTURE CHANGES
.PP
None contemplated.
.SH REFERENCES
.PP
.TP
[1] 
L. R. Rabiner and R. W. Schafer, 
\fIDigital Processing of Speech Signals\fP,
Prentice Hall, NJ. 1978.
.TP
[2]
J.P.Burg, D.G.Luenberger, D.L.Wenger, "Estimation of Structured
Covariance Matrices" \fIProceedings of the IEEE\fP, Vol. 70, No. 9
September 1982
.TP
[3]
Shankar Narayan and J.P. Burg, "Spectral Estimation of Quasi-Periodic
Data", \fIProceedings ICASSP 87\fP, pp. 944-947.  
.sp
.SH  AUTHOR
.PP
Original program by Brian Sublett. 
.PP
Modified extensively by John Shore.  




