#! /bin/sh
# This material contains unpublished, proprietary software of 
# Entropic Research Laboratory, Inc. Any reproduction, distribution, 
# or publication of this work must be authorized in writing by Entropic 
# Research Laboratory, Inc., and must bear the notice: 
#
#    "Copyright (c) 1998  Entropic Research Laboratory, Inc. 
#                   All rights reserved."
#
# The copyright notice above does not evidence any actual or intended 
# publication of this source code.     
#
# @(#)melspec.tst	1.1	7/12/98	ERL
# 
# Written by:  Rod Johnson
# Checked by:
# Revised by:
# 
# Brief description:  Test script for melspec program.
#   "melspec.tst clean" just removes the test files.
#   "melspec.tst" runs the tests and leaves the test files in place.
#

## CLEAN UP TEST FILES

rm -f tstA.spec out1.spec log1.txt log1.ref ref1.spec dif1.spec \
    tmp.spec tmp.sd dif.sd \
    out2.spec log2.txt log2.ref \
    out3.spec testparam

case "$1" in
clean)
    exit 0;;
esac

## TURN OFF COMMON PROCESSING

USE_ESPS_COMMON=off; export USE_ESPS_COMMON

## MAKE TEST FEA_SPEC FILE

echo "Making test FEA_SPEC file tstA.spec."

esig2fea - tstA.spec <<aArDvArK
Esignal
   0.0B
  ASCII
     48
   1471
     -1
Tag: LONG <r>
tot_power: FLOAT <r>
re_spec_val: SCHAR 129 <r>
sf: FLOAT 1 <g> [0]       8000.0000
src_sf: FLOAT 1 <g> [0]       8000.0000
nan: LONG 1 <g> [0]            0
frmlen: LONG 1 <g> [0]           64
step: LONG 1 <g> [0]           16
frame_meth: SHORT 1 <g> [0]       1
frame_meth.enumStrings: CHAR 3 9 <g> 
  [0][0]  "NONE\0\0\0\0\0"
  [1][0]  "FIXED\0\0\0\0"
  [2][0]  "VARIABLE\0"
contin: SHORT 1 <g> [0]       1
contin.enumStrings: CHAR 2 4 <g> 
  [0][0]  "NO\0\0"
  [1][0]  "YES\0"
start: LONG 1 <g> [0]            1
spec_type: SHORT 1 <g> [0]       2
spec_type.enumStrings: CHAR 5 5 <g> 
  [0][0]  "NONE\0"
  [1][0]  "PWR\0\0"
  [2][0]  "DB\0\0\0"
  [3][0]  "REAL\0"
  [4][0]  "CPLX\0"
freq_format: SHORT 1 <g> [0]       2
freq_format.enumStrings: CHAR 7 10 <g> 
  [0][0]  "NONE\0\0\0\0\0\0"
  [1][0]  "SYM_CTR\0\0\0"
  [2][0]  "SYM_EDGE\0\0"
  [3][0]  "ASYM_CTR\0\0"
  [4][0]  "ASYM_EDGE\0"
  [5][0]  "ARB_VAR\0\0\0"
  [6][0]  "ARB_FIXED\0"
num_freqs: LONG 1 <g> [0]          129
FeaSubtype: SHORT <g>      7
FeaSubtype.enumStrings: CHAR 10 10 <g> 
  [0][0]  "NONE\0\0\0\0\0\0"
  [1][0]  "FEA_VQ\0\0\0\0"
  [2][0]  "FEA_ANA\0\0\0"
  [3][0]  "FEA_STAT\0\0"
  [4][0]  "FEA_QHIST\0"
  [5][0]  "FEA_DST\0\0\0"
  [6][0]  "FEA_2KB\0\0\0"
  [7][0]  "FEA_SPEC\0\0"
  [8][0]  "FEA_SD\0\0\0\0"
  [9][0]  "FEA_FILT\0\0"
recordFreq: DOUBLE <g>       500.0000000000000
startTime: DOUBLE 1 <g> [0]        1.022000000000000
[Record 0]
  [tot_power]       42.399658
  [Tag]         8145
  [re_spec_val]
    [0]    23   40   46   50   52   53   54   53   53   51   49   46
    [12]    46   48   50   51   51   51   51   50   48   46   43   39
    [24]    35   32   31   32   33   34   35   36   36   37   38   40
    [36]    41   42   42   41   38   33   18   29   35   37   37   36
    [48]    35   33   31   30   31   32   33   34   35   36   37   39
    [60]    41   42   43   43   43   41   40   40   41   44   46   47
    [72]    47   46   44   41   35   24   31   34   32   25   32   38
    [84]    41   42   42   42   41   42   43   44   45   46   46   45
    [96]    44   42   39   37   35   34   34   34   37   40   42   43
    [108]    43   43   42   41   40   40   39   39   38   36   34   31
    [120]    32   35   37   38   38   37   35   29    0
[Record 1]
  [tot_power]       215.90933
  [Tag]         8161
  [re_spec_val]
    [0]    37   39   42   45   48   50   52   53   53   53   52   51
    [12]    50   49   47   45   44   45   47   49   51   51   51   50
    [24]    49   49   50   50   50   50   50   51   52   52   53   52
    [36]    51   49   47   45   46   48   50   51   52   52   52   51
    [48]    51   50   50   51   51   52   52   52   52   51   49   46
    [60]    44   45   48   50   51   52   52   52   53   53   54   53
    [72]    52   50   47   45   46   48   50   51   52   53   54   55
    [84]    56   57   58   58   59   59   58   58   56   55   52   48
    [96]    43   38   37   39   42   45   48   50   52   52   53   52
    [108]    51   49   48   48   48   49   49   47   45   42   37   36
    [120]    40   43   45   47   48   48   48   48   48
[Record 2]
  [tot_power]       1402.1790
  [Tag]         8177
  [re_spec_val]
    [0]    40   41   45   48   52   54   56   57   56   56   54   52
    [12]    52   53   54   54   54   54   54   54   54   54   54   54
    [24]    56   57   58   59   59   59   59   59   59   59   59   59
    [36]    60   61   62   62   63   64   64   64   65   64   64   63
    [48]    63   61   60   59   58   57   57   57   57   57   57   57
    [60]    57   57   57   57   57   58   59   60   60   61   61   61
    [72]    61   60   60   59   58   57   57   57   58   59   61   63
    [84]    64   65   65   66   66   65   64   63   62   61   59   58
    [96]    57   56   56   57   58   59   59   59   60   59   59   59
    [108]    58   57   57   56   55   55   55   54   54   54   54   54
    [120]    55   55   55   54   53   52   49   44   34
[Record 3]
  [tot_power]       1747.7202
  [Tag]         8193
  [re_spec_val]
    [0]    42   44   49   53   56   58   61   62   63   64   64   64
    [12]    64   64   63   63   62   61   59   57   54   51   50   52
    [24]    55   57   59   60   60   60   60   59   57   53   43   46
    [36]    55   59   62   64   66   67   67   68   68   67   66   65
    [48]    63   61   58   53   43   42   50   53   55   57   57   57
    [60]    56   55   52   47   43   49   53   56   58   59   60   60
    [72]    61   61   61   61   60   59   57   54   56   60   63   65
    [84]    66   66   66   65   64   61   59   57   56   57   58   59
    [96]    59   60   60   60   60   60   59   58   57   56   54   53
    [108]    52   52   52   52   51   50   47   45   47   51   53   55
    [120]    56   57   57   56   55   54   53   52   51
[Record 4]
  [tot_power]       942.25507
  [Tag]         8209
  [re_spec_val]
    [0]    30   40   48   53   56   59   62   63   64   65   64   64
    [12]    63   62   61   61   60   59   58   56   55   53   53   53
    [24]    54   54   54   54   53   52   52   52   53   55   56   57
    [36]    58   58   58   59   60   61   62   62   63   63   62   61
    [48]    60   58   56   53   52   50   49   49   48   48   49   49
    [60]    50   50   50   50   50   50   49   49   49   48   48   48
    [72]    48   49   49   50   52   55   59   61   63   65   65   66
    [84]    65   65   63   61   58   55   50   46   43   44   46   48
    [96]    49   50   51   51   51   51   51   50   49   47   45   41
    [108]    37   34   35   37   39   41   43   45   47   49   50   51
    [120]    52   53   53   52   50   48   45   41   40
[Record 5]
  [tot_power]       315.31058
  [Tag]         8225
  [re_spec_val]
    [0]    37   44   50   55   58   60   61   61   60   59   56   54
    [12]    52   49   41   46   52   55   55   54   52   49   47   45
    [24]    44   46   48   50   50   50   49   49   48   47   46   47
    [36]    47   46   43   43   46   47   49   50   52   53   53   52
    [48]    49   44   41   44   45   44   43   42   44   45   46   47
    [60]    48   47   44   40   29   28   32   27   23   36   41   43
    [72]    43   42   39   44   48   52   54   56   59   61   62   63
    [84]    64   63   61   58   54   47   40   44   45   44   44   44
    [96]    43   41   35   18   28   30   32   37   40   42   42   41
    [108]    38   33   26   31   34   35   34   33   36   40   43   45
    [120]    46   47   47   47   46   44   42   37   30
[Record 6]
  [tot_power]       3602.5481
  [Tag]         8241
  [re_spec_val]
    [0]    48   51   55   58   62   64   66   67   67   67   67   67
    [12]    67   67   68   69   69   70   70   70   69   69   69   68
    [24]    67   67   66   66   65   65   65   64   64   64   64   65
    [36]    65   66   66   66   66   66   65   66   66   66   65   65
    [48]    64   63   62   61   60   60   59   58   57   57   57   56
    [60]    56   56   55   54   54   53   53   54   55   56   57   58
    [72]    59   61   62   63   63   63   63   63   64   65   67   68
    [84]    68   68   67   66   64   62   60   59   58   56   55   53
    [96]    50   48   47   47   47   48   48   48   48   47   46   45
    [108]    44   44   46   47   49   50   50   51   52   53   53   53
    [120]    52   51   51   51   52   53   54   55   55
[Record 7]
  [tot_power]       10057.778
  [Tag]         8257
  [re_spec_val]
    [0]    45   51   57   61   64   66   68   69   70   71   72   72
    [12]    73   73   74   74   74   74   74   74   73   72   70   69
    [24]    67   66   65   65   65   65   65   65   65   66   67   68
    [36]    70   71   72   73   74   74   74   74   74   73   72   70
    [48]    68   66   63   60   58   57   56   55   55   54   54   54
    [60]    54   54   54   54   54   53   54   55   56   57   58   58
    [72]    59   60   62   64   66   68   70   71   72   73   73   73
    [84]    73   72   70   68   66   63   60   58   56   55   55   53
    [96]    52   51   50   50   50   50   49   49   49   48   48   48
    [108]    48   49   49   50   52   54   55   57   59   60   60   61
    [120]    61   61   60   60   59   57   55   52   50
[Record 8]
  [tot_power]       5620.1919
  [Tag]         8273
  [re_spec_val]
    [0]    37   51   57   61   64   66   67   68   67   66   63   62
    [12]    64   66   68   69   69   69   69   69   69   67   65   62
    [24]    56   52   56   57   56   52   49   54   57   58   55   50
    [36]    59   65   69   71   73   74   74   74   73   72   70   67
    [48]    64   60   57   53   48   40   42   46   46   45   44   44
    [60]    45   45   45   43   40   39   43   46   48   48   46   43
    [72]    45   46   44   52   60   65   69   71   73   74   74   74
    [84]    73   71   68   64   58   53   51   48   39   41   48   50
    [96]    49   47   44   46   48   48   47   43   39   42   45   46
    [108]    45   41   32   41   46   49   50   52   54   57   59   61
    [120]    62   62   61   60   58   55   51   46   43
[Record 9]
  [tot_power]       3671.2175
  [Tag]         8289
  [re_spec_val]
    [0]    48   55   60   63   65   66   67   67   66   65   64   63
    [12]    62   61   60   58   55   50   53   58   61   63   64   65
    [24]    66   66   66   65   64   62   61   58   56   55   57   59
    [36]    62   64   66   67   69   70   71   71   70   68   64   58
    [48]    39   52   55   55   52   49   49   50   49   47   44   39
    [60]    40   45   47   47   45   40   28   39   44   46   46   44
    [72]    38   40   43   47   55   62   66   70   72   73   74   73
    [84]    72   71   68   65   61   57   57   58   57   56   55   53
    [96]    52   53   53   54   54   54   54   53   51   50   49   49
    [108]    49   49   50   49   49   48   46   47   51   55   58   60
    [120]    61   61   61   59   58   55   51   47   45
[Record 10]
  [tot_power]       45199.863
  [Tag]         8305
  [re_spec_val]
    [0]    50   54   59   64   68   70   73   74   75   75   75   75
    [12]    75   75   76   77   78   78   78   78   77   77   76   76
    [24]    76   77   77   78   78   78   77   77   77   77   77   78
    [36]    78   78   78   78   79   80   80   81   81   81   80   79
    [48]    77   76   75   74   73   73   72   71   70   69   68   68
    [60]    67   67   67   68   68   68   69   69   70   70   71   72
    [72]    72   73   73   74   75   76   78   78   79   78   77   74
    [84]    69   66   69   73   74   75   74   74   73   72   71   70
    [96]    70   69   69   69   68   67   66   65   65   65   65   66
    [108]    66   66   66   65   65   65   65   66   67   67   67   66
    [120]    64   61   56   44   49   53   53   48    2
[Record 11]
  [tot_power]       186006.64
  [Tag]         8321
  [re_spec_val]
    [0]    11   55   61   66   69   72   74   75   76   78   79   80
    [12]    81   82   84   84   85   86   86   86   85   85   84   82
    [24]    81   80   79   78   78   78   79   79   79   79   80   80
    [36]    82   83   84   86   87   87   88   88   88   88   87   86
    [48]    84   82   80   77   75   72   71   70   70   69   68   68
    [60]    68   68   68   69   69   70   70   71   72   72   73   73
    [72]    74   75   77   79   81   82   84   85   85   86   85   85
    [84]    85   84   83   82   81   80   79   77   76   75   74   74
    [96]    73   73   72   71   71   70   70   70   69   69   68   68
    [108]    68   68   69   70   71   72   73   73   74   74   74   74
    [120]    73   72   71   70   69   69   68   68   68
[Record 12]
  [tot_power]       139175.20
  [Tag]         8337
  [re_spec_val]
    [0]    53   57   62   66   68   70   71   72   72   71   70   68
    [12]    71   76   80   83   85   86   86   86   85   84   81   77
    [24]    71   60   59   65   66   66   66   65   65   67   68   69
    [36]    69   73   78   81   84   86   88   88   88   88   87   85
    [48]    82   79   74   69   63   61   60   56   51   49   51   52
    [60]    50   49   50   53   56   58   59   60   60   60   60   62
    [72]    63   64   66   70   74   78   81   84   85   87   87   87
    [84]    87   86   84   81   78   73   68   66   66   65   64   63
    [96]    63   63   63   62   61   61   61   61   59   58   57   57
    [108]    57   56   57   60   63   66   68   70   72   73   73   74
    [120]    74   73   73   71   70   69   67   66   65
[Record 13]
  [tot_power]       67697.734
  [Tag]         8353
  [re_spec_val]
    [0]    50   56   61   64   66   67   67   67   66   65   60   50
    [12]    66   73   77   80   82   84   84   84   84   83   81   78
    [24]    74   67   64   67   68   69   69   68   68   66   65   66
    [36]    69   72   75   78   80   82   83   84   84   84   83   81
    [48]    79   76   71   65   56   54   55   53   48   44   48   49
    [60]    49   47   44   39   38   43   47   50   52   52   51   43
    [72]    49   57   61   65   68   72   75   79   81   83   84   84
    [84]    84   83   82   79   76   72   65   55   57   60   59   57
    [96]    55   52   52   53   54   54   54   53   53   51   50   49
    [108]    50   52   54   56   57   57   58   59   61   63   65   66
    [120]    66   66   65   63   61   58   55   53   52
[Record 14]
  [tot_power]       82619.055
  [Tag]         8369
  [re_spec_val]
    [0]    46   51   59   64   69   71   73   75   75   76   77   77
    [12]    76   73   65   68   77   81   84   85   85   84   83   79
    [24]    74   63   71   76   78   80   81   81   82   81   80   79
    [36]    78   79   80   81   81   79   75   65   75   80   82   83
    [48]    83   81   79   76   75   75   75   75   74   73   73   73
    [60]    72   72   72   72   72   72   72   73   73   74   74   74
    [72]    74   74   75   76   76   74   73   76   80   83   84   84
    [84]    83   81   77   66   66   74   76   76   75   74   72   71
    [96]    70   69   69   69   70   70   69   68   67   65   64   63
    [108]    64   64   64   64   64   63   62   61   59   57   58   61
    [120]    63   64   63   62   59   57   55   54   54
[Record 15]
  [tot_power]       476313.34
  [Tag]         8385
  [re_spec_val]
    [0]    45   55   62   66   70   73   75   77   78   79   80   80
    [12]    81   82   83   84   86   87   88   89   90   89   89   88
    [24]    87   86   85   85   84   84   84   84   85   85   85   85
    [36]    86   86   87   88   88   89   89   90   90   90   91   90
    [48]    90   89   88   86   84   82   80   78   77   76   76   76
    [60]    76   76   76   76   76   76   77   77   78   78   79   79
    [72]    80   81   83   84   85   87   88   89   90   91   91   91
    [84]    91   90   89   87   86   85   84   83   82   81   80   79
    [96]    78   77   77   76   76   75   74   74   73   72   72   71
    [108]    71   71   71   72   72   72   73   73   73   74   74   74
    [120]    74   74   73   73   72   70   69   68   68
[Record 16]
  [tot_power]       474768.25
  [Tag]         8401
  [re_spec_val]
    [0]    56   58   63   67   70   72   74   75   75   75   75   73
    [12]    72   75   79   82   85   87   89   90   90   90   89   88
    [24]    86   83   79   76   76   76   77   77   76   77   77   78
    [36]    78   78   79   82   85   88   90   91   92   93   93   92
    [48]    91   89   87   83   79   74   70   69   68   66   65   65
    [60]    66   67   67   67   67   68   68   69   70   70   71   72
    [72]    73   75   76   79   82   85   88   90   92   93   93   93
    [84]    93   92   91   89   86   83   80   76   75   75   75   74
    [96]    73   72   72   71   71   70   69   68   67   66   65   64
    [108]    64   64   65   66   67   69   70   71   73   74   74   75
    [120]    75   75   75   75   74   73   73   72   72
[Record 17]
  [tot_power]       198083.11
  [Tag]         8417
  [re_spec_val]
    [0]    53   56   61   65   67   68   69   67   66   63   60   61
    [12]    67   72   76   79   81   83   84   85   85   85   85   84
    [24]    83   80   77   73   67   65   67   67   66   61   58   63
    [36]    65   66   67   72   78   82   85   87   89   90   90   89
    [48]    88   86   83   79   74   66   62   62   60   54   47   52
    [60]    52   49   40   21   33   45   51   53   52   46   50   59
    [72]    64   67   67   67   70   77   81   85   88   89   90   91
    [84]    90   89   88   85   82   78   73   66   57   48   53   57
    [96]    57   55   49   48   52   53   52   49   45   47   49   51
    [108]    50   49   47   50   55   58   60   61   62   62   62   64
    [120]    65   66   67   67   66   65   62   57   51
[Record 18]
  [tot_power]       82090.984
  [Tag]         8433
  [re_spec_val]
    [0]    33   46   58   65   69   71   72   72   72   71   71   70
    [12]    67   61   68   74   77   78   77   73   64   73   79   81
    [24]    82   81   79   75   68   63   71   74   75   75   75   74
    [36]    74   73   71   64   68   77   82   84   85   86   85   84
    [48]    83   82   81   80   78   76   73   71   72   72   71   70
    [60]    69   69   69   69   68   68   67   68   70   70   70   69
    [72]    69   69   68   62   62   74   79   82   84   85   86   85
    [84]    85   84   83   82   80   76   69   61   69   71   71   68
    [96]    65   63   63   63   63   64   65   65   64   62   61   60
    [108]    59   59   60   61   62   61   60   58   55   53   48   39
    [120]    51   57   60   61   61   60   57   52   32
aArDvArK

## RUN PROGRAM (1) --- minimal options

echo 'Running command (1):'
echo '    ./melspec -n21 -X tstA.spec out1.spec 2>log1.txt'
./melspec -n21 -X tstA.spec out1.spec 2>log1.txt

## CHECK OUTPUT (1)

## --- STDERR OUTPUT (1)

## --- Make comparison text file (1)

echo '... making comparison file log1.ref'

cat > log1.ref <<aArDvArK
-------------mel_freqs-------------  ---------------freqs---------------
  low edge      peak     high edge     low edge      peak     high edge 
        0.0        97.5       195.1          0.0        63.3       132.3
       97.5       195.1       292.6         63.3       132.3       207.6
      195.1       292.6       390.2        132.3       207.6       289.6
      292.6       390.2       487.7        207.6       289.6       379.1
      390.2       487.7       585.3        289.6       379.1       476.6
      487.7       585.3       682.8        379.1       476.6       583.0
      585.3       682.8       780.4        476.6       583.0       699.0
      682.8       780.4       877.9        583.0       699.0       825.5
      780.4       877.9       975.5        699.0       825.5       963.4
      877.9       975.5      1073.0        825.5       963.4      1113.8
      975.5      1073.0      1170.6        963.4      1113.8      1277.8
     1073.0      1170.6      1268.1       1113.8      1277.8      1456.7
     1170.6      1268.1      1365.7       1277.8      1456.7      1651.6
     1268.1      1365.7      1463.2       1456.7      1651.6      1864.3
     1365.7      1463.2      1560.8       1651.6      1864.3      2096.1
     1463.2      1560.8      1658.3       1864.3      2096.1      2348.9
     1560.8      1658.3      1755.9       2096.1      2348.9      2624.6
     1658.3      1755.9      1853.4       2348.9      2624.6      2925.1
     1755.9      1853.4      1951.0       2624.6      2925.1      3252.9
     1853.4      1951.0      2048.5       2925.1      3252.9      3610.3
     1951.0      2048.5      2146.1       3252.9      3610.3      4000.0
aArDvArK

## --- Check stderr output (1)

echo '... checking output'

if sed 's/-0/0/g' log1.txt | diff -b log1.ref -
then :
else echo "* * * ERROR: bad frequency table in log1.txt"
fi

## --- FEA_SPEC OUTPUT (1)

## --- Make FEA_SPEC comparison file (1)

echo '... making comparison file ref1.spec'

esig2fea - ref1.spec <<aArDvArK
Esignal
   0.0B
  ASCII
     48
   2600
     -1
Tag: LONG <r>
tot_power: FLOAT <r>
re_spec_val: FLOAT 21 <r>
band_high: DOUBLE 1 <g> [0]        4000.000000000000
nan: LONG 1 <g> [0]            0
mel_high: DOUBLE 1 <g> [0]        2146.095566186717
band_low: DOUBLE 1 <g> [0]        0.000000000000000
src_sf: DOUBLE 1 <g> [0]        8000.000000000000
add_const: DOUBLE 1 <g> [0]        0.000000000000000
frmlen: LONG 1 <g> [0]           64
freqs: FLOAT 21 <g> 
  [0]       63.288890      132.29990      207.55039      289.60446
  [4]       379.07727      476.63956      583.02272      699.02426
  [8]       825.51382      963.43965      1113.8357      1277.8295
  [12]       1456.6504      1651.6390      1864.2570      2096.0984
  [16]       2348.9012      2624.5606      2925.1431      3252.9021
  [20]       3610.2946
frame_meth: SHORT 1 <g> [0]       1
frame_meth.enumStrings: CHAR 3 9 <g> 
  [0][0]  "NONE\0\0\0\0\0"
  [1][0]  "FIXED\0\0\0\0"
  [2][0]  "VARIABLE\0"
mel_low: DOUBLE 1 <g> [0]        0.000000000000000
contin: SHORT 1 <g> [0]       0
contin.enumStrings: CHAR 2 4 <g> 
  [0][0]  "NO\0\0"
  [1][0]  "YES\0"
mel_freqs: FLOAT 21 <g> 
  [0]       97.549798      195.09960      292.64940      390.19919
  [4]       487.74899      585.29879      682.84859      780.39839
  [8]       877.94819      975.49798      1073.0478      1170.5976
  [12]       1268.1474      1365.6972      1463.2470      1560.7968
  [16]       1658.3466      1755.8964      1853.4462      1950.9960
  [20]       2048.5458
start: LONG 1 <g> [0]            1
record_freq: DOUBLE 1 <g> [0]        500.0000000000000
spec_type: SHORT 1 <g> [0]       2
spec_type.enumStrings: CHAR 5 5 <g> 
  [0][0]  "NONE\0"
  [1][0]  "PWR\0\0"
  [2][0]  "DB\0\0\0"
  [3][0]  "REAL\0"
  [4][0]  "CPLX\0"
freq_format: SHORT 1 <g> [0]       6
freq_format.enumStrings: CHAR 7 10 <g> 
  [0][0]  "NONE\0\0\0\0\0\0"
  [1][0]  "SYM_CTR\0\0\0"
  [2][0]  "SYM_EDGE\0\0"
  [3][0]  "ASYM_CTR\0\0"
  [4][0]  "ASYM_EDGE\0"
  [5][0]  "ARB_VAR\0\0\0"
  [6][0]  "ARB_FIXED\0"
num_freqs: LONG 1 <g> [0]           21
start_time: DOUBLE 1 <g> [0]        1.022000000000000
mult_const: DOUBLE 1 <g> [0]        1.000000000000000
FeaSubtype: SHORT <g>      7
FeaSubtype.enumStrings: CHAR 10 10 <g> 
  [0][0]  "NONE\0\0\0\0\0\0"
  [1][0]  "FEA_VQ\0\0\0\0"
  [2][0]  "FEA_ANA\0\0\0"
  [3][0]  "FEA_STAT\0\0"
  [4][0]  "FEA_QHIST\0"
  [5][0]  "FEA_DST\0\0\0"
  [6][0]  "FEA_2KB\0\0\0"
  [7][0]  "FEA_SPEC\0\0"
  [8][0]  "FEA_SD\0\0\0\0"
  [9][0]  "FEA_FILT\0\0"
recordFreq: DOUBLE <g>       500.0000000000000
startTime: DOUBLE 1 <g> [0]        1.022000000000000
[Record 0]
  [tot_power]       42.399658
  [re_spec_val]
  [0]        1.5668565       6.8203470       8.1870547       6.0365381
  [4]        3.4379576       6.6982070       6.3041610      0.28534116
  [8]       -9.5145743      -6.5153530      -1.7511888      -4.0457993
  [12]       -6.3494476      -7.5110797     -0.11753911       3.3116920
  [16]        2.6782246      0.75657004       4.4535800       1.5997710
  [20]       0.66827986
  [Tag]         8145
[Record 1]
  [tot_power]       215.90933
  [re_spec_val]
  [0]       -2.6750500       3.4794947       7.3364438       7.7882151
  [4]        5.6266882       1.9631085       5.2800418       7.1435066
  [8]        6.9636448       8.7579427       8.7939816       7.5504254
  [12]        9.9086361       10.378810       8.7027317       11.869534
  [16]        10.761255       16.834674       15.613031       11.011115
  [20]        8.8439078
  [Tag]         8161
[Record 2]
  [tot_power]       1402.1790
  [re_spec_val]
  [0]       0.40801692       7.4076024       11.096651       10.457385
  [4]        8.5479789       9.9927932       10.452178       11.677821
  [8]        15.351868       16.605314       18.279011       21.818895
  [12]        21.834178       17.585572       16.552324       19.457513
  [16]        19.572456       24.009558       22.536747       19.626569
  [20]        16.884023
  [Tag]         8177
[Record 3]
  [tot_power]       1747.7202
  [re_spec_val]
  [0]        4.7686230       11.729022       16.617173       19.056298
  [4]        19.603554       18.544660       14.625086       10.394604
  [8]        16.110472       15.972611       16.461875       24.632216
  [12]        23.916546       14.787932       14.396105       17.056832
  [16]        20.215455       24.200630       21.053874       18.556413
  [20]        14.635006
  [Tag]         8193
[Record 4]
  [tot_power]       942.25507
  [re_spec_val]
  [0]        4.3176318       12.381281       17.617173       19.619184
  [4]        18.610456       16.573507       13.515540       10.438559
  [8]        10.787813       10.953094       15.319928       19.361394
  [12]        19.703584       12.282108       8.8782898       8.9308288
  [16]        17.939679       23.763482       14.435280       9.5184218
  [20]        9.9140948
  [Tag]         8209
[Record 5]
  [tot_power]       315.31058
  [re_spec_val]
  [0]        6.3762387       13.270536       15.560423       13.547974
  [4]        7.7243226       6.9592410       10.080874       4.7579527
  [8]        5.7607854       6.3341480       4.2162560       6.8600582
  [12]        9.4507231       3.5415629       4.7580988      -1.0939466
  [16]        13.882990       21.157132       10.864238     -0.23056301
  [20]        3.6841708
  [Tag]         8225
[Record 6]
  [tot_power]       3602.5481
  [re_spec_val]
  [0]        10.408017       17.407602       21.336444       22.319549
  [4]        22.950666       24.991735       26.109641       25.184531
  [8]        23.321340       22.113841       23.088936       24.196384
  [12]        23.369793       19.321894       15.565918       15.901152
  [16]        22.739472       26.591609       19.879249       8.8250888
  [20]        12.702580
  [Tag]         8241
[Record 7]
  [tot_power]       10057.778
  [re_spec_val]
  [0]        12.721390       19.479495       23.679764       26.558490
  [4]        28.657883       29.992793       30.043289       27.002666
  [8]        22.826432       23.017826       27.918771       31.879588
  [12]        29.732928       19.641900       13.621695       16.205959
  [16]        27.764094       31.604098       21.496026       11.139487
  [20]        19.619185
  [Tag]         8257
[Record 8]
  [tot_power]       5620.1919
  [re_spec_val]
  [0]        12.721390       19.270536       22.152108       20.642416
  [4]        20.871974       24.698207       25.213483       21.535736
  [8]        13.113828       12.561491       22.920762       31.117715
  [12]        28.282275       13.642725       3.8177002       5.1397946
  [16]        27.096161       31.644600       17.419582       6.8140468
  [20]        18.530213
  [Tag]         8273
[Record 9]
  [tot_power]       3671.2175
  [re_spec_val]
  [0]        15.035430       19.820347       21.560423       20.165354
  [4]        17.710304       13.694592       15.103851       21.288511
  [8]        22.269224       17.650710       20.868029       27.635824
  [12]        24.133573       10.590773       5.0127627       3.4763445
  [16]        25.865618       31.007760       19.626296       13.092647
  [20]        17.662005
  [Tag]         8289
[Record 10]
  [tot_power]       45199.863
  [re_spec_val]
  [0]        15.617207       23.661176       28.557182       30.273039
  [4]        30.950666       33.255661       34.150604       33.293351
  [8]        34.565563       34.894286       35.721147       38.064263
  [12]        37.776736       32.298188       27.813698       29.728317
  [16]        35.556759       35.562359       32.686064       27.914631
  [20]        26.850503
  [Tag]         8305
[Record 11]
  [tot_power]       186006.64
  [re_spec_val]
  [0]        17.376239       25.110289       29.753074       33.616149
  [4]        37.319100       40.671595       42.088931       40.162521
  [8]        36.382054       36.503373       40.314651       45.342766
  [12]        44.675204       35.823282       28.201068       31.558737
  [16]        41.508819       44.404723       37.761011       31.446397
  [20]        33.902799
  [Tag]         8321
[Record 12]
  [tot_power]       139175.20
  [re_spec_val]
  [0]        17.615790       23.363715       26.380783       26.041434
  [4]        31.014403       39.781629       41.969381       37.766932
  [8]        24.423909       23.680711       32.870690       44.208838
  [12]        44.193764       31.434683       12.618084       19.834104
  [16]        39.874529       45.275870       33.967956       22.106603
  [20]        32.244640
  [Tag]         8337
[Record 13]
  [tot_power]       67697.734
  [re_spec_val]
  [0]        16.035430       20.667882       21.686033       19.152854
  [4]        27.548956       37.153080       40.193591       37.272823
  [8]        26.872659       25.535669       30.180449       40.065305
  [12]        40.236358       28.134638       7.4324655       10.635825
  [16]        35.586278       42.130427       31.489490       14.700862
  [20]        23.613670
  [Tag]         8353
[Record 14]
  [tot_power]       82619.055
  [re_spec_val]
  [0]        15.767328       24.349636       29.070419       31.554836
  [4]        30.865389       32.960187       40.370368       38.528636
  [8]        33.337558       38.292137       37.707863       37.197321
  [12]        39.456759       35.913892       32.233488       32.902454
  [16]        37.110523       41.131309       34.008222       28.615358
  [20]        23.786183
  [Tag]         8369
[Record 15]
  [tot_power]       476313.34
  [re_spec_val]
  [0]        17.872147       26.048186       31.384901       34.558490
  [4]        37.168711       41.211678       45.053525       45.206650
  [8]        42.518201       42.040439       43.911323       47.166451
  [12]        48.415856       43.482119       35.854053       37.785000
  [16]        46.353000       49.911307       43.168827       35.336828
  [20]        34.539840
  [Tag]         8385
[Record 16]
  [tot_power]       474768.25
  [re_spec_val]
  [0]        18.768623       25.479495       29.336444       30.051536
  [4]        31.021407       40.162885       45.642864       45.207011
  [8]        38.387938       34.266726       36.729420       47.057589
  [12]        49.997860       41.870405       26.298189       30.037850
  [16]        46.434033       51.595580       41.862611       29.944929
  [20]        34.028454
  [Tag]         8401
[Record 17]
  [tot_power]       198083.11
  [re_spec_val]
  [0]        16.615790       21.820347       22.513016       18.767214
  [4]        26.843592       36.277380       40.796693       40.963207
  [8]        35.045037       23.854613       25.477305       42.756920
  [12]        46.866065       38.340724       13.837036       17.010710
  [16]        41.796564       48.374583       37.444740       13.070697
  [20]        23.899334
  [Tag]         8417
[Record 18]
  [tot_power]       82090.984
  [re_spec_val]
  [0]        15.979005       24.195069       26.769063       26.426198
  [4]        23.868713       31.179748       31.725647       36.220495
  [8]        35.340053       30.806370       31.485472       38.969334
  [12]        42.575058       36.992890       29.592105       28.706488
  [16]        38.164804       43.810422       34.689194       24.304031
  [20]        20.334167
  [Tag]         8433
aArDvArK

## --- Check FEA_SPEC output (1)

echo '... checking output'

if test `featype out1.spec` = "FEA_SPEC"
then

## --- Header (1)

    # tagged?

    if psps -D out1.spec | grep ' not  *tagged' >/dev/null
    then echo "* * * ERROR: file is not tagged; should be tagged"
    fi

    # generic string values

    gv_contin="NO"
    gv_frame_meth="FIXED"
    gv_freq_format="ARB_FIXED"
    gv_spec_type="DB"

    for i in \
	contin      frame_meth  freq_format spec_type
    do
	x=`hditem -i $i out1.spec`
	eval "pat=\$gv_$i"

	case "$x" in
	"$pat") : ;;
	'') echo "* * * ERROR: header item $i is missing" ;;
	*)  echo "* * * ERROR: header item $i is \"$x\"; should be \"$pat\"" ;;
	esac
    done

    # generic integer values

    gv_start="1"
    gv_nan="0"
    gv_num_freqs="21"
    gv_frmlen="64"
    gv_ndrec="19"

    for i in \
	start       nan         num_freqs   frmlen      ndrec
    do
	x=`hditem -i $i out1.spec`
	eval "pat=\$gv_$i"

	case "$x" in
	'') echo "* * * ERROR: header item $i is missing" ;;
	*)
	    case `echo "if ($x == $pat) \"OK\"" | bc` in
	    OK) : ;;
	    *)  echo "* * * ERROR: header item $i is $x; should be $pat" ;;
	    esac
	;;
	esac
    done

    # generic floating-point values

    gv_add_const="0"
    gv_band_high="4000"
    gv_band_low="0"
    gv_mel_high="2146.1"
    gv_mel_low="0"
    gv_mult_const="1"
    gv_record_freq="500"
    gv_src_sf="8000"
    gv_start_time="1.022"

    for i in \
	add_const   band_high   band_low    mel_high    mel_low \
	mult_const  record_freq src_sf      start_time
    do
	x=`hditem -i $i out1.spec`
	eval "pat=\$gv_$i"

	case "$x" in
	'') echo "* * * ERROR: header item $i is missing" ;;
	*)
	    case `echo	"scale=20;" \
			"if (($pat) >= 0) {" \
			"    if (($x) < 0.9999 * ($pat)) \"NOT\";" \
			"    if (($pat) < 0.9999 * ($x)) \"NOT\"};" \
			"if (($pat) < 0) {" \
			"    if (($x) > 0.9999 * ($pat)) \"NOT\";" \
			"    if (($pat) > 0.9999 * ($x)) \"NOT\"};" \
			"\"OK\"" | bc`
	    in
	    OK) : ;;
	    *)  echo "* * * ERROR: header item $i is $x; should be $pat" ;;
	    esac
	;;
	esac
    done

    x=`hditem -i mel_freqs out1.spec`
    y=`echo "97.550 195.100 292.649 390.199 487.749" \
	"585.299 682.849 780.398 877.948 975.498" \
	"1073.048 1170.598 1268.147 1365.697 1463.247" \
	"1560.797 1658.347 1755.896 1853.446 1950.996" \
	"2048.546"`
    case "$x" in
    '') echo "* * * ERROR: header item mel_freqs is missing" ;;
    *)
	echo "$y" | testsd -a- tmp.sd
	echo "$x" \
	    | testsd -a- - \
	    | addsd -g-1 tmp.sd - - \
	    | feafunc -f samples -f- -FABS - dif.sd
	rm -f tmp.sd
	`get_esps_base`/bin/select -o tmp.sd -q'samples > 1.0e-2' \
						dif.sd 2>/dev/null 1>&2
	n=`hditem -i ndrec tmp.sd`
	if test "$n" -ne 0
	then
	    echo "* * * ERROR: header item mel_freqs is:"
	    echo "$x"
	    echo "should be:"
	    echo "$y"
	fi
    esac

    x=`hditem -i freqs out1.spec`
    y=`echo "63.289 132.300 207.550 289.604 379.077" \
	"476.640 583.023 699.024 825.514 963.440" \
	"1113.836 1277.829 1456.650 1651.639 1864.257" \
	"2096.098 2348.901 2624.561 2925.143 3252.902" \
	"3610.295"`
    case "$x" in
    '') echo "* * * ERROR: header item freqs is missing" ;;
    *)
	echo "$y" | testsd -a- tmp.sd
	echo "$x" \
	    | testsd -a- - \
	    | addsd -g-1 tmp.sd - - \
	    | feafunc -f samples -f- -FABS - dif.sd
	rm -f tmp.sd
	`get_esps_base`/bin/select -o tmp.sd -q'samples > 1.0e-2' \
						dif.sd 2>/dev/null 1>&2
	n=`hditem -i ndrec tmp.sd`
	if test "$n" -ne 0
	then
	    echo "* * * ERROR: header item freqs is:"
	    echo "$x"
	    echo "should be:"
	    echo "$y"
	fi
    esac

## --- Data (1)

    if feaop -f tot_power -f tot_power \
	     -f tot_p_dif -O SUB out1.spec tstA.spec - \
       | feafunc -ftot_p_dif -f- -FABS - dif1.spec
    then
	rm -f tmp.spec
	`get_esps_base`/bin/select -o tmp.spec -q'tot_p_dif > 0' \
						dif1.spec 2>/dev/null 1>&2
	n=`hditem -i ndrec tmp.spec`

	if test "$n" -ne 0
	then
	    echo "* * * ERROR: tot_power differs from original in $n records"
	fi
    else
	echo "* * * ERROR: couldn't form tot_power difference " \
					"between out1.spec and tstA.spec"
    fi

    if feaop -f re_spec_val -f re_spec_val \
	     -f re_spec_dif -O SUB out1.spec ref1.spec - \
       | feafunc -f re_spec_dif -f- -FABS - dif1.spec 
    then
	rm -f tmp.spec
	`get_esps_base`/bin/select -o tmp.spec \
		-q'max(re_spec_dif) > 1.0e-5' dif1.spec 2>/dev/null 1>&2
	n=`hditem -i ndrec tmp.spec`

	if test "$n" -ne 0
	then
	    echo "* * * ERROR: re_spec_val disagrees with ref in $n records"
	fi
    else
	echo "* * * ERROR: couldn't form re_spec_val difference " \
	     "between out1.spec and ref1.spec"
    fi

else
    echo "* * * ERROR: output file out1.spec is not a FEA_SPEC file"
fi

## RUN PROGRAM (2) --- non-default command-line options

echo 'Running command (2):'
echo '    ./melspec -a5 -m2 -r6:14 -M100:2100 -SPWR -W200 -X tstA.spec out2.spec 2>log2.txt'
./melspec -a5 -m2 -r6:14 -M100:2100 -SPWR -W200 -X tstA.spec out2.spec 2>log2.txt

## CHECK OUTPUT (2)

## --- STDERR OUTPUT (2)

## --- Make comparison text file (2)

echo '... making comparison file log2.ref'

cat > log2.ref <<aArDvArK
-------------mel_freqs-------------  ---------------freqs---------------
  low edge      peak     high edge     low edge      peak     high edge 
      100.0       200.0       300.0         65.0       135.9       213.5
      200.0       300.0       400.0        135.9       213.5       298.2
      300.0       400.0       500.0        213.5       298.2       390.9
      400.0       500.0       600.0        298.2       390.9       492.1
      500.0       600.0       700.0        390.9       492.1       602.7
      600.0       700.0       800.0        492.1       602.7       723.6
      700.0       800.0       900.0        602.7       723.6       855.7
      800.0       900.0      1000.0        723.6       855.7      1000.0
      900.0      1000.0      1100.0        855.7      1000.0      1157.7
     1000.0      1100.0      1200.0       1000.0      1157.7      1330.1
     1100.0      1200.0      1300.0       1157.7      1330.1      1518.5
     1200.0      1300.0      1400.0       1330.1      1518.5      1724.3
     1300.0      1400.0      1500.0       1518.5      1724.3      1949.3
     1400.0      1500.0      1600.0       1724.3      1949.3      2195.1
     1500.0      1600.0      1700.0       1949.3      2195.1      2463.7
     1600.0      1700.0      1800.0       2195.1      2463.7      2757.2
     1700.0      1800.0      1900.0       2463.7      2757.2      3078.0
     1800.0      1900.0      2000.0       2757.2      3078.0      3428.6
     1900.0      2000.0      2100.0       3078.0      3428.6      3811.6
aArDvArK

## --- Check stderr output (2)

echo '... checking output'

if sed 's/-0/0/g' log2.txt | diff -b log2.ref -
then :
else echo "* * * ERROR: bad frequency table in log2.txt"
fi

## --- FEA_SPEC OUTPUT (2)

## --- Check FEA_SPEC output (2)

echo '... checking FEA_SPEC output header'

if test `featype out2.spec` = "FEA_SPEC"
then

## --- Header (2)

    # tagged?

    if psps -D out1.spec | grep ' not  *tagged' >/dev/null
    then echo "* * * ERROR: file is not tagged; should be tagged"
    fi

    # generic string values

    gv_contin="NO"
    gv_frame_meth="FIXED"
    gv_freq_format="ARB_FIXED"
    gv_spec_type="PWR"

    for i in \
	contin      frame_meth  freq_format spec_type
    do
	x=`hditem -i $i out2.spec`
	eval "pat=\$gv_$i"

	case "$x" in
	"$pat") : ;;
	'') echo "* * * ERROR: header item $i is missing" ;;
	*)  echo "* * * ERROR: header item $i is \"$x\"; should be \"$pat\"" ;;
	esac
    done

    # generic integer values

    gv_start="6"
    gv_nan="9"
    gv_num_freqs="19"
    gv_frmlen="64"
    gv_ndrec="9"

    for i in \
	start       nan         num_freqs   frmlen      ndrec
    do
	x=`hditem -i $i out2.spec`
	eval "pat=\$gv_$i"

	case "$x" in
	'') echo "* * * ERROR: header item $i is missing" ;;
	*)
	    case `echo "if ($x == $pat) \"OK\"" | bc` in
	    OK) : ;;
	    *)  echo "* * * ERROR: header item $i is $x; should be $pat" ;;
	    esac
	;;
	esac
    done

    # generic floating-point values

    gv_add_const="5"
    gv_band_high="3811.64"
    gv_band_low="64.950"
    gv_mel_high="2100"
    gv_mel_low="100"
    gv_mult_const="2"
    gv_record_freq="500"
    gv_src_sf="8000"
    gv_start_time="1.032"

    for i in \
	add_const   band_high   band_low    mel_high    mel_low \
	mult_const  record_freq src_sf      start_time
    do
	x=`hditem -i $i out2.spec`
	eval "pat=\$gv_$i"

	case "$x" in
	'') echo "* * * ERROR: header item $i is missing" ;;
	*)
	    case `echo	"scale=20;" \
			"if (($pat) >= 0) {" \
			"    if (($x) < 0.9999 * ($pat)) \"NOT\";" \
			"    if (($pat) < 0.9999 * ($x)) \"NOT\"};" \
			"if (($pat) < 0) {" \
			"    if (($x) > 0.9999 * ($pat)) \"NOT\";" \
			"    if (($pat) > 0.9999 * ($x)) \"NOT\"};" \
			"\"OK\"" | bc`
	    in
	    OK) : ;;
	    *)  echo "* * * ERROR: header item $i is $x; should be $pat" ;;
	    esac
	;;
	esac
    done

else
    echo "* * * ERROR: output file out2.spec is not a FEA_SPEC file"
fi

## RUN PROGRAM (3) --- parameter file

## --- MAKE PARAM FILE (3)

echo 'Making param file testparam'

cat > testparam <<aArDvArK
int	start = 3;
int	nan = 0;
int     num_freqs = 20;
float   channel_width = 0.0;
float   band_low = 200;
float   band_high = 0;
string  spec_type = "PWR";
float   add_const = 2.0;
float   mult_const = -1.0;
aArDvArK

echo 'Running command (3):'
echo '    ./melspec -P testparam tstA.spec out3.spec 2>/dev/null'
./melspec -P testparam tstA.spec out3.spec 2>/dev/null

## CHECK OUTPUT (3)

## --- FEA_SPEC OUTPUT (3)

## --- Check FEA_SPEC output (3)

echo '... checking FEA_SPEC output header'

if test `featype out3.spec` = "FEA_SPEC"
then

## --- Header (3)

    # tagged?

    if psps -D out1.spec | grep ' not  *tagged' >/dev/null
    then echo "* * * ERROR: file is not tagged; should be tagged"
    fi

    # generic string values

    gv_contin="NO"
    gv_frame_meth="FIXED"
    gv_freq_format="ARB_FIXED"
    gv_spec_type="PWR"

    for i in \
	contin      frame_meth  freq_format spec_type
    do
	x=`hditem -i $i out3.spec`
	eval "pat=\$gv_$i"

	case "$x" in
	"$pat") : ;;
	'') echo "* * * ERROR: header item $i is missing" ;;
	*)  echo "* * * ERROR: header item $i is \"$x\"; should be \"$pat\"" ;;
	esac
    done

    # generic integer values

    gv_start="3"
    gv_nan="0"
    gv_num_freqs="20"
    gv_frmlen="64"
    gv_ndrec="17"

    for i in \
	start       nan         num_freqs   frmlen      ndrec
    do
	x=`hditem -i $i out3.spec`
	eval "pat=\$gv_$i"

	case "$x" in
	'') echo "* * * ERROR: header item $i is missing" ;;
	*)
	    case `echo "if ($x == $pat) \"OK\"" | bc` in
	    OK) : ;;
	    *)  echo "* * * ERROR: header item $i is $x; should be $pat" ;;
	    esac
	;;
	esac
    done

    # generic floating-point values

    gv_add_const="2"
    gv_band_high="4000"
    gv_band_low="200"
    gv_mel_high="2146.10"
    gv_mel_low="283.234"
    gv_mult_const="-1"
    gv_record_freq="500"
    gv_src_sf="8000"
    gv_start_time="1.026"

    for i in \
	add_const   band_high   band_low    mel_high    mel_low \
	mult_const  record_freq src_sf      start_time
    do
	x=`hditem -i $i out3.spec`
	eval "pat=\$gv_$i"

	case "$x" in
	'') echo "* * * ERROR: header item $i is missing" ;;
	*)
	    case `echo	"scale=20;" \
			"if (($pat) >= 0) {" \
			"    if (($x) < 0.9999 * ($pat)) \"NOT\";" \
			"    if (($pat) < 0.9999 * ($x)) \"NOT\"};" \
			"if (($pat) < 0) {" \
			"    if (($x) > 0.9999 * ($pat)) \"NOT\";" \
			"    if (($pat) > 0.9999 * ($x)) \"NOT\"};" \
			"\"OK\"" | bc`
	    in
	    OK) : ;;
	    *)  echo "* * * ERROR: header item $i is $x; should be $pat" ;;
	    esac
	;;
	esac
    done

else
    echo "* * * ERROR: output file out3.spec is not a FEA_SPEC file"
fi


