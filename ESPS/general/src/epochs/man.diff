.\" Copyright (c) 1996 Entropic Research Laboratory, Inc.; All rights reserved
.\" @(#)epochs.1	1.15 4/2/97 ERL
.ds ]W (c) 1996 Entropic Research Laboratory, Inc.
.TH  EPOCHS 1\-ESPS 4/2/97
.SH NAME

.nf
epochs \- glottal-pulse analysis using dynamic programming 
.fi
.SH SYNOPSIS
.B
epochs
[
.BI -P " param_file"
][
.BI -p
][
.BI -n
][
.BI -b " in_labelfile"
][
.BI -f " in_f0file"
]
.BI -o " out_labelfile"
][
.BI -x " debug_level"
]
.I in_file
.I out_file
.PP
.SH DESCRIPTION
\fIEpochs\fR uses dynamic programming optimization to determine both
the polarity and locations of the pitch epoch pulses (times of vocal fold
closure) during voiced speech.  The algorithm will work for any
quasi-periodic input signal, but is currently tuned for operation on
integrated LPC speech residual signals.
.PP
The input file \fIin_file\fR is typically a 16-bit PCM
inverse-filtered speech file of FEA_SD type processed to approximate
the derivative of the glottal volume velocity.  A speech residual
signal produced by \fIget_resid (1-ESPS)\fR would be appropriate.  The
output file \fIout_file\fR is a FEA_SD file with impulses at the epoch
locations and zeros elsewhere.  The polarity of the output pulses
reflects the polarity of the peaks chosen in the input signal.
.PP
Unvoiced speech in \fIin_file\fR often results in false pitch epoch 
estimation.  Consider using \fImask(1-ESPS)\fR to gate
out unwanted pitch epochs by masking them against a better
voice/unvoiced estimator, such as that produced by
\fIget_f0(1-ESPS)\fR.
.PP
.SH OPTIONS
.PP
The following options are supported:
.TP
.BI -P " param_file \fR[params]\fP" 
uses the parameter file \fIparam_file\fR
rather than the default, which is \fI$ESPS_BASE/lib/params/Pepochs\fP. 
.TP
.BI -p
.TP
.BI -n
specifies that only positive (\fI-p\fR) or negative (\fI-n\fR) local
extrema in \fIin_file\fR need be considered as potential epochs.
If neither option is specified, all local extrema are considered.
The processing time can be cut in half or more by specifying one of these 
options, if the polarity of the \fIin_file\fR is known in advance.
\fIIn_file\fR may be examined with \fIwaves+\fR to determine the 
polarity of any given data set.  NOTE: if the pulse polarity is incorrectly
specified, analysis results will range from tolerable to horrible.
.TP
.BI -b " in_labelfile"
\fIIn_labelfile\fR is the name of a label file (as created by \fIwaves+\fR;
"V" label for voiced, "O" label for unvoiced and others) used to gate
on the epoch finder only in selected regions.  Best epoch-location results (especially
near voice onset/offset) are obtained if neither \fI-b\fR or \fI-f\fR 
option is used.
.TP
.BI -f " in_f0file"
\fIIn_f0file\fR is the name of a FEA file containing the
\fIprob_voice\fR field (as created by \fIget_f0(1-ESPS)\fR) used to
gate on the epoch finder only in selected regions.  Best
epoch-location results (especially near voice onset/offset) are
obtained if neither \fI-b\fR or \fI-f\fR option is used.
.TP
.BI -o " out_labelfile"
\fIOut_labelfile\fR is the name of a file to contain epoch marks in 
\fIwaves+\fR "label" format (see \fIxlabel\fR(1-ESPS)).
.TP
.BI -x " debug_level \fR[0]\fP"
If \fIdebug_level\fR is positive, \fIepochs\fR prints debugging 
messages and other information on the standard error
output.  The messages proliferate as the  \fIdebug_level\fR
increases.  If \fIdebug_level\fP is 0 (the default), no messages are
printed.  
.SH ESPS PARAMETERS
The following parameters are supported.  Except the \fIpolarity\fR parameter,
all parameters have default settings optimally determined by exhaustive search 
of the parameter space using electro-glottographic data as the reference.  
Twiddling with the parameters is NOT recommended.  A possible
exception to this is the \fIclip_level\fR which can be increased to
reduce the number of peaks considered using dynamic progrmming.  This
will speed up operation, but can result in loss of peaks for some
voicing conditions (e.g. extreme breathy voice).
.TP
.I polarity - string
Similar to \fI-p\fR and \fI-n\fR command-line options:
a value of "+" to consider only peaks with positive polarity 
as potential epochs; a value of "-" for negative polarity; and a value of
"NONE" is to consider all peaks as potential epoch locations.
.PP
All parameters below have values between 0.0 and 1.0.
.TP
.I clip_level - float
The clipping level that determines what fraction of the local RMS a peak
must exceed to be considered as an epoch candidate.  Default is 0.5.
.TP
.I peak_quality_wt - float
Weight given to peak quality.  Default is 1.0.
.TP
.I period_dissim_cost -float
Cost of dissimilarities in the shape of consecutive peaks.  Default is 0.4.
.TP
.I peak_qual_dissim_cost - float
Cost for peak quality dissimilarity.  Default is 0.05.
.TP
.I shape_to_peak - float
Relative contribution of shape to peak quality.  Default is 0.35.
.TP
.I freq_dh_cost - float
Cost of each frequency doubling/halving.  Sometimes the F0 really does
jump by octaves.  Low values make octave jumps more likely.  Default is
0.7.
.TP
.I peak_award - float
Award for selecting a peak.  Determines average peak density.  Default is
0.4.
.TP
.I v_uv_cost - float
cost for V-UV transition.  High values discourage state transitions.  Default
is 0.2.
.TP
.I uv_v_cost - float
Cost for UV-V transition.  High values discourage state transitions.  Default
is 0.2.
.TP
.I rms_onoff_cost - float
Cost for RMS rise/fall appropriateness.  This assumes RMS rises at
voice onset and falls at voice offset.  The extent to which voicing
transition costs are relaxed at these points is adjusted by this
factor.  Default is 0.3.
.TP
.I uv_cost - float
Cost of unvoiced classification.  Default is 0.7.
.TP
.I jitter - float
Reasonable inter-period variation expressed as a fraction of a period.  Default
is 0.1.
.PP
.SH ESPS COMMON
No ESPS common parameter processing is supported.
.PP
.SH ESPS HEADERS
The generic header items saved are the standard header items, \fIstart_time\fR
and \fIrecord_freq\fR, and any parameter under \fBESPS PARAMETERS\fR if its
value is acquired by means of parameter file.
.PP
.SH FUTURE CHANGES
.PP
.SH EXAMPLES
.PP
The following fragment of a Bourne shell script demonstrates how
epochs might be located in an ESPS speech file named "spch.sd".  The
resulting "spch.lab" file contains epoch marks expressed in time in a
form compatible with the \fIxlabel\fR program.  The "spch.pe" file
represents the epoch locations as a series of pulses in a file directly
viewable using \fIxwaves\fR.  See also the example in \fIlp_syn (1-ESPS)\fR.
.PP
.nf
.na
.ne 10
# Determine the sample rate of the original speech file.
sf=`hditem -i record_freq spch.sd`
#
# Establish the window size and frame step for periodic analyses.
size=.02
step=.005
#
# Get analysis step size and window length in samples.
ssize=`echo $sf $size \\* p q | dc`
sstep=`echo $sf $step \\* p q | dc`
#
# Standard rule-of-thumb computation for LPC order.
order=`echo $sf 1000 / 2 + p q | dc`
#
# Compute reflection coefficients using a standard set of parameters
refcof -z -r1:1000000 -e.97 -x0 -wHANNING -l$ssize -S$sstep \\
       -o$order spch.sd spch.rc
#
# Get a high-resolution estimate of F0 and a reasonably accurate
#  voicing-state estimate.
get_f0 -i $step spch.sd spch.f0
#
# Compute the LPC residual (approximates the glottal flow derivative).
get_resid -a 1 -i 0.0 spch.sd spch.rc spch.res
#
# Blank out the residual signal in the unvoiced regions.
mask spch.f0 spch.res spch.resm
#
# Find the points of glottal closure in the voiced regions.
epochs  -o spch.lab spch.resm spch.pe
.fi
.ad
.PP
.SH ERRORS AND DIAGNOSTICS
.PP
.SH BUGS
.PP
None known.
.SH REFERENCES
Talkin, D., "Voicing epoch determination with dynamic programming,"
\fIJ. Acoust. Soc. Amer.\fP, 85, Supplement 1, 1989.
.sp
Talkin, D. and Rowley, J., "Pitch-Synchronous analysis and synthesis
for TTS systems," \fIProceedings of the ESCA Workshop on Speech
Synthesis\fP, C. Benoit, Ed., Imprimerie des Ecureuils, Gieres, France,
1990.
.PP
.SH "SEE ALSO"
.nf
\fIrefcof\fP(1-ESPS), \fIget_resid\fP(1-ESPS), \fImask\fP(1-ESPS), 
\fIget_f0\fP(1-ESPS), \fIps_ana\fP(1-ESPS)
.fi
.PP
.SH AUTHORS
David Talkin, Derek Lin





