# wave_pro for waves+ demo @(#)wave_pro	1.3 3/16/92 ERL
# This file specifies many of the parameters for the program waves.
# Specifications take the form
#		key_word <value>
# One or several of these pairs may appear on each line.  Lines in this
# file which begin with # are ignored.  The comments and blank lines seen here
# are optional and may be deleted in personalized copies.  A full set of
# specifications is included here as documentation, but any subset
# is acceptable.  If specifications are to be deleted, remove both the
# keyword and the value.  This file is accessed by get_globals() in globals.c.

# non-zero values for debug_level result in various debugging-related output 
# messages; higher values yield more messages
debug_level     0

# non-zero values for verbose results in assorted output messages that
# inform the user about what (x)waves+ is doing.  A value of 0 yields 
# silent operation.  The default level of 1 yields the following: 
# (1) startup messages (reporting on the profile that is read and 
# whether or not a DSP board has been detected); (2) the command lines
# of any external program calls caused by play, spectrogram, add_espsn, 
# add_espsf, add_espst, and shell commands; (3) the pid of any forked 
# process; (4) notification that a forked process has terminated.  
# If verbose is 2 or higher, you get all of the above, plus some details
# about waves+ command processing.  
verbose        0

# maximum size of signal data buffer (in bytes)
max_buff_size	2000000

# whether or not to write ESPS common after marking segments
#write_common 1

# a default header to use in case of headerless files; NOTE: in the case
# of ESPS files, it is better to set the unix environment variable DEF_HEADER
# before calling waves, as this will have the desired effect for all ESPS
# programs as well as waves
def_header $ESPS_BASE/lib/waves/files/def_head.feasd

# initial height in pixels of waveform display frame (CRT screen is 900 high)
# Limits:	50 to 900  (pixels)
wave_height     250

# initial width in pixels of waveform display frame (CRT screen is 1152 wide)
# Limits:	50 to 1152  (pixels)
wave_width	1010

# minimum height in pixels of spectrogram windows 
# If min_spec_height is larger than the "natural" height of 
# spectrogram windows (which is somewhat more than the number of FFT 
# points), and if vertical rescaling is enabled (v_spect_rescale == 1), 
# then spectrogram windows will be rescaled vertically when painted.  
# Set this to 50 to avoid any rescaling on initial window display (i.e.,
# for fastest painting)
# Limits:	50 to 900  (pixels)
min_spec_height 300

# minimum width in pixels of spectrogram windows 
# Initial spectrogram painting puts up one pixel-column per record 
# (i.e., per FFT). The "natural" width is somewhat more than the 
# number of records (it this fits on the screen).  If min_spec_width
# is larger than the number of records, a larger window is created.  
# You might want larger windows to see more of the digital readouts.  
# Limits:	50 to 1152  (pixels)
min_spec_width 250

# whether or not to display the reticle grid on spectrogram displays 
# (0 means don't display grid) 
reticle_grid  1

# whether or not to interpolate spectrogram displays (0 means plot 
# uniform rectangles)
spect_interp  1

# whether or not to rescale spectrogram displays vertically (1 means
# rescale); note that rescaling can be an expensive operation
v_spect_rescale 1

# whether or not to rescale spectrogram displays horizontally (1 means
# escale); note that rescaling of interpolated data can be an expensive
# operation if spect_rescale_scope has the value "buffer"
h_spect_rescale 1

# whether horizontal rescaling of interpolated data is computed for the
# entire xwaves+ buffer (value is "buffer") or for just the current
# window width (value is "view").  Rescaling for the entire buffer can
# be quite slow if the ratio of the current view to the entire buffer is
# large, but has the advantage that horizontal scrolling is very fast
# once the new image is computed (since it is stored).  Rescaling just
# the current view is faster, but has the disadvantage that the
# rescaling tapes place every time the viewpoint is moved (i.e.,
# scrolling is slower).  
spect_rescale_scope view

# files specifying parameters for generating spectrograms
# These are text files with format similar to that used herein.
nb_spect_params	 $ESPS_BASE/lib/waves/files/nb_params
wb_spect_params	 $ESPS_BASE/lib/waves/files/wb_params

# location of upper left of first waveform frame ((0,0) is upper left of CRT)
# Limits:	x: 0 to 1152-wave_width;  y: 0 to 900-wave_width  (pixels)
first_x		10
first_y		150

# location of the upper left corner of the waves control window (pixels)
# if tempted to set both of these to 0, it's better to use 1 since that
# permits twm users to set usePPosition "non-zero".  Note that standard
# xview command line option "-Wp <x> <y>" can be used to set position from 
# command line 
ctlwin_x 1
ctlwin_y 1

# whether or not the main control panel is iconized or not on startup; 
# control panel will be visible unless ctlwin_iconized is nonzero; Note that
# the standard xview command line options -Wi (iconic) and +Wi (open) 
# can be used to determined the initial iconization state.  Also, 
# the position of the icon can be determined by the standard xview 
# command line option "-WP <x> <y>".  
ctlwin_iconized 0

# number of pixels to advance upon creation of subsequent waveform frames
# Limits:	x: 0 to 1152; y: 0 to 900  (pixels)
x_increment	0
y_increment	250

# set initial state of waves to color or monochrome 
# This must be 1 (for color) or 0 (for monochrome)
# This is set automatically on startup -- uncomment to override
# do_color 1

# plotting style to use for waveforms.
# 1 ==> standard "connect-the-dots;" 2 ==> additional lines are drawn from the
# true data point to the base line (histogram like).
line_type 1

# height in pixels of the region used to display and operate the scrollbars
scrollbar_height 15

# height in pixels of the region above the scrollbar used to display
# digital readouts (XView only).
readout_bar_height 20

# link various signal data and view manipulations across all members of
# a display ensemble (booleans).
scroll_ganged 1
zoom_ganged 0
edit_ganged 0

# default signal input file (appears in Waveform Manipulator panel)
# May be a complete or partial pathname (completed after waves is run).
#inputname	speech.sd

# default output file (or file containing lists of output names)
# See waves Help frame for output name usage.
outputname	foo1

# default name to put in "Overlay name:" item in command 
# window (does not load file) 
#overlayname

# a default name to use for the first display ensemble generated by waves
# If omitted it becomes the simplified basename of the first file read.
# objectname 

# colormap used for waveform and spectrogram displays
# The program cmap may be used to generate these RGB colormaps.

colormap	$ESPS_BASE/lib/waves/colormaps/Colormap

# foreground and background colormap entries for the control panel 
# of waves+ and attachments 
# One byte is used each for red, green and blue intensities respectively.
# (hexadecimal format)
fg_color	000000
bg_color        dcdcdc

# default (initial) duration of waveform displays (page size); (sec)
#ref_size	20.0

# default step size for waveform "paging" (sec)
ref_step	1.0

# default (initial) starting location in speech file (sec)
# This should be less than the file duration + start time.
ref_start	0.0

# ratio used for "zoom" operations on waveforms
# Any value except zero should work.
zoom_ratio	0.5

# Specify an external function (program) to "attach" to waves.
# The ones currently available are the labeler ("label", "xlabel")
# and a spectral estimation program, ("spectrum", "xspectrum").
# The users existing unix search path is used to find the actual 
# program to execute. 
# WARNING: leave this out if you want to load attachments directly 
# via the "attach" command in command files (including the command
# file invoked as init_file -- see below) 
# funcname	xspectrum

#Here are a few globals that allow control of the xlabel control window
#position, the xspectrum control window position, and the xspectrum
#plot (data) window position and size 

#These two set the X and Y positions of the xlabel control window:
xlabel_ctlwin_x 700
xlabel_ctlwin_y 0

#These two set the X and Y positions of the xspectrum control window:
xspectrum_ctlwin_x      590
xspectrum_ctlwin_y      0

#These two set the width and height of xspectrum data (plot) windows
#(there can be more than one plot window - one per object):
xspectrum_datwin_height 250
xspectrum_datwin_width  425

#xspectrum_datwin_x and xspectrum_datwin_y control the initial
#position of the xspectrum data (plot window) if there is only one
#display object.  Positive values for xspectrum_datwin_x or
#xspectrum_datwin_y specify respectively the X and Y position of the
#xspectrum plot window if there is only one display object at the time
#the plot window is displayed.  If there is more than one display
#object, the xspectrum plot window is aligned with the first display
#window of the corresponding xwaves+ display object, with the xspectrum
#display directly underneath the left side of the xwaves+ window.  If
#xspectrum_data_win_x is negative, the top of all xspectrum plot
#windows is positioned directly underneath the first xwaves+ display
#window of the corresponding object.  If xspectrum_data_win_y is
#negative, the left side of all xspectrum plot windows is lined up
#(vertically) with the left side of the first xwaves+ display window of
#the corresponding object.
xspectrum_datwin_x      -1
xspectrum_datwin_y      -1

# If xspectrum_datwin_forward is non-zero, the xspectrum plot window 
# will be brought to the foreground every time a new spectrum is computed.  
# This can only be changed before xspectrum starts up.  
xspectrum_datwin_forward 1

# This is the maximum LPC (maximum entropy) order that xspectrum 
# is allowed to use when computing reflection coefficients.  The 
# limit is enforced on the xspectrum control panel.  The value is read
# only on startup and must be less than or equal to 200
xspectrum_max_lpc_order 200

# variables which set: the fraction of "F0" displays used for F0 (used
# in the specialized display that is created when loading the .f0.sig 
# files produced by the formant program); the minimum F0 displayed (Hz); 
# and the range (in Hz) of F0 displayed.
f0_size	.6
f0_min	50
f0_range 150

# Determine the plotting style for F0; argument elements are type,
# plotting char., x-offset and y-offset, respectively.  If type is 0,
# the usual connect-the-dots paradigm is used; if type is 1, the data
# points are discretely plotted using the plot character.  x- and
# y-offsets are pixel offsets required to center the data points (font
# dependent).  BUG: The plot character specification is ignored in xwaves.  
# A solid square is always used instead of a character because no way of
# plotting text in the "transparent" mode has been found in xview.
f0_plot_specs 1 * 4 6

# The globals plot_max and plot_min provide a limited means of
# overriding the automatic vertical scaling of plot data.  If plot_max
# (plot_min) is non-zero, xwaves+ will scale every new or refreshed plot
# so that the top (bottom) of the window or region corresponds to the
# fixed value.  Values outside of the range are simply clipped by the
# top of the bottom of the display window (extending into the
# scrollbar).  Use with care!  The xwaves+ command auto_plot_limits
# provides a convenient means for resetting both values to zero.
plot_max 0.0
plot_min 0.0

# Determine the initial definitions of left and middle button presses
# for waveform windows.
# left_op can be one of: "up/down move" "move closest" "modify signal" 
#                        "repeat previous"
left_op	up/down move

# middle_op can be one of: "blow up; function" "up/down move" "blow up time"
#			   "play between marks" "repeat previous"
middle_op play between marks

# Determine the initial definitions of left and middle button presses
# for spectrogram windows.
# spec_left_op can be one of: "up/down move" "move closest" "mark formants" 
#                             "repeat previous"
spec_left_op	up/down move

# spec_middle_op can be one of: "modify intensity" "move contour"
#				"play between marks" "up/down move"
#                         	"repeat previous"
spec_middle_op modify intensity

# Miscellaneous switches are set/cleared using the "options" keyword.
# See the (x)waves+ man page
options 16

# name (and options, if any) of external program to call for 
# spectrogram calculations
sgram_prog   sgram

# name (and options, if any) of external program to call for 
# D/A operations
play_prog    play

# if remote_path is defined (and not overriden by either 
# remote_input_path or remote_output_path as described below), it
# is prefixed to the basename of all input and output file names in
# external calls (play operations, spectrogram operations, operations
# from add_espsX).  This is useful for operation in an NFS directory with rsh. 
# If remote_path is defined, it overrides output_dir in the case of 
# external calls. 
#
#remote_path

# if remote_input_path is defined, it is prefixed to the basename of all
# input file names in external calls.  It overrides any definition of
# remote_path.
#
#remote_input_path

# if remote_output_path is defined, it is prefixed to the basename of all
# output file names in external calls.  It overrides definitions of
# remote_path and output_dir
#
#remote_output_path

# whether or not to show numeric values for each trace in a waveform 
# display (1 means show the values)
show_vals    1

# whether or not to show labels for ach trace in a waveform 
# display (1 means show the labels)
show_labels  1

# image_clip is used by the digital halftone algorithm; 
# (Spectrograms are displayed in digital halftone form on monochrome 
# monitors or when do_color is set to 0).  When
# Values between 127 and (127 -image_clip) are displayed in black. 
# The default value is 7 (i.e., in spectrogram terms, everything 
# 7db down from the maximum possible value is shown in black).
image_clip 7

# image_range is also used by the digital halftone algorithm; 
# Everything below (127 - image_clip - image_range) is shown in white.
# The default is 40 (i.e., in spectrogram terms, assuming 7 as the
# value of image_clip, every- thing more than 47db down from the maximum
# possible value is shown in white.  
image_range 40

# Some X servers reverse the sense of monochrome images.  
# Setting invert_dither to 1 causes the display of
# digital-halftone images to appear with black and white pixels reversed
invert_dither 0

# the path for temporary files 

temp_path /usr/tmp

# number of INET socket port to use when operating in display-server mode
#socket_port

# name of a command file to be executed on startup
# if init_file is omitted, a default will be invoked (providing
# a standard button control panel).  If you don't want any init_file
# behavior (including the default), then use "/dev/null" as the 
# init_file name 
init_file  xw_init.WC

# name of a writable directory to used for all xwaves+ output files.  
# Do not define this global unless you want it used, and make sure that
# the named directory exists and is writable.  If output_dir is defined,
# all output files from xwaves+, xspectrum, and xlabel will go into 
# this directory (including edited files, saved file segments, spectrogram
# output files, outputs from add_espsf, etc.).  It is OK to include
# environment variables in the path.  
output_dir  @DEMO_TEMP@

# If command_step is non-zero, the execution of command files is paused after
# every command; pressing "CONTINUE" will execute the next command. 
command_step   0

# If a DSP board is present, waves+ will use it for play and spectrogram
# operations by default.  You can disable use of the board by setting
# use_dsp32 to 0 (in which case external ESPS programs will be used for 
# the play and spectrogram operations).  Setting use_dsp32 to 1 will 
# result in the board being used again.  Normally, the use_dsp32 global
# should not be set in the profile.  
#use_dsp32 0

# If a DSP board is present, it requires data in SHORT format. 
# If fea_sd_special == 1, xwaves+ will convert all ESPS FEA_SD 
# files to SHORT on input.  Note that this is not in general a 
# good thing to do unless necessary.  If a board is detected, 
# fea_sd_special is set to 1 on startup, but you can override this
# by uncommenting the following (you can also use the "set" command
# after startup) 
#fea_sd_special 0

# By default, a primitive lock-and-wait mechanism is used to allow 
# more than one program to use a DSP board.  dsp32_wait is the maximum 
# amount of time (in seconds) to wait for board access.  Note that the
# locking mechanism can be disabled by setting the environment 
# variable DSP_NO_LOCK (see espsenv (1-ESPS))
dsp32_wait     5

# if 1 (default) means correct P8574 part is on the Ariel analog
# module for the AT&T Surfboard; set to 0 if the wrong (A) part is there
#P8574_type 1

# ARIEL_16 specifies which crystal is on the Ariel VME-16 ProPort 
# Ariel analog module for the AT&T Surfboard.  Set to 0 (the default), to
# specify the standard 24 Mhz crystel; set to 1 to specify the 16 Mhz crystal. 
#ARIEL_16 0




