# waves profile for TIMIT demo
# @(#)wave_pro	1.3 11/5/91 ERL
# This file specifies many of the parameters for the program waves.
# Specifications take the form
#		key_word <value>
# One or several of these pairs may appear on each line.  Lines in this
# file which begin with # are ignored.  The comments and blank lines seen here
# are optional and may be deleted in personalized copies.  A full set of
# specifications is included here as documentation, but any subset
# is acceptable.  If specifications are to be deleted, remove both the
# keyword and the value.  This file is accessed by get_globals() in globals.c.

# some default items you might want to un-comment and perhaps change:

#command_step   1

#use_dsp32 0

verbose        0

#dsp32_wait     5

#debug_level     1

# maximum size of signal data buffer (in bytes)
# max_buff_size	2000000

# whether or not to write ESPS common after marking segments
#write_common 1

# a default header to use in case of headerless files
def_header def_head.feasd

# initial height in pixels of waveform display frame (CRT screen is 900 high)
# Limits:	50 to 900  (pixels)
wave_height     250

# initial width in pixels of waveform display frame (CRT screen is 1152 wide)
# Limits:	50 to 1152  (pixels)
wave_width	1010

# minimum height in pixels of spectrogram windows 
# If min_spec_height is larger than the "natural" height of 
# spectrogram windows (which is somewhat more than the number of FFT 
# points), and if vertical rescaling is enabled (v_spect_rescale == 1), 
# then spectrogram windows will be rescaled vertically when painted.  
# Set this to 50 to avoid any rescaling on initial window display (i.e.,
# for fastest painting)
# Limits:	50 to 900  (pixels)
min_spec_height 50

# minimum width in pixels of spectrogram windows 
# Initial spectrogram painting puts up one pixel-column per record 
# (i.e., per FFT). The "natural" width is somewhat more than the 
# number of records (it this fits on the screen).  If min_spec_width
# is larger than the number of records, a larger window is created.  
# You might want larger windows to see more of the digital readouts.  
# Limits:	50 to 1152  (pixels)
min_spec_width 350

# whether or not to display the reticle grid on spectrogram displays 
# (0 means don't display grid) 
reticle_grid  1

# whether or not to interpolate spectrogram displays (0 means plot 
# uniform rectangles)
spect_interp  1

# whether or not to rescale spectrogram displays horizontally (1 means
# rescale); note that rescaling can be an expensive operation
h_spect_rescale 0

# whether or not to rescale spectrogram displays vertically (1 means
# rescale); note that rescaling can be an expensive operation

v_spect_rescale 0

# files specifying parameters for generating spectrograms
# These are text files with format similar to that used herein.
nb_spect_params	 nb_params
wb_spect_params	 wb_params

# location of upper left of first waveform frame ((0,0) is upper left of CRT)
# Limits:	x: 0 to 1152-wave_width;  y: 0 to 900-wave_width  (pixels)
first_x		5
first_y		325

# location of the upper left corner of the waves control window (pixels)
# if tempted to set both of these to 0, it's better to use 1 since that
# permits twm users to set usePPosition "non-zero"
ctlwin_x 0
ctlwin_y 220

# number of pixels to advance upon creation of subsequent waveform frames
# Limits:	x: 0 to 1152; y: 0 to 900  (pixels)
x_increment	0
y_increment	100

# set initial state of waves to color or monochrome 
# This must be 1 (for color) or 0 (for monochrome)
# This is set automatically on startup -- uncomment to override
# do_color 1

# plotting style to use for waveforms.
# 1 ==> standard "connect-the-dots;" 2 ==> additional lines are drawn from the
# true data point to the base line (histogram like).
line_type 1

# height in pixels of the region used to display and operate the scrollbars
scrollbar_height 20

# height in pixels of the region above the scrollbar used to display
# digital readouts (XView only).
readout_bar_height 20

# link various signal data and view manipulations across all members of
# a display ensemble (booleans).
scroll_ganged 1
zoom_ganged 0
edit_ganged 0

# default signal input file (appears in Waveform Manipulator panel)
# May be a complete or partial pathname (completed after waves is run).
#inputname	speech.sd

# default output file (or file containing lists of output names)
# See waves Help frame for output name usage.
outputname	foo1

# default name to put in "Overlay name:" item in command 
# window (does not load file) 
#overlayname

# a default name to use for the first display ensemble generated by waves
# If omitted it becomes the simplified basename of the first file read.
objectname timit

# colormap used for waveform and spectrogram displays
# The program cmap may be used to generate these RGB colormaps.

colormap	TImap

# foreground and background colormap entries for the control panel 
# of waves+ and attachments 
# One byte is used each for red, green and blue intensities respectively.
# (hexadecimal format)
fg_color	000000
bg_color        dcdcdc

# default (initial) duration of waveform displays (page size); (sec)
ref_size	20.0

# default step size for waveform "paging" (sec)
ref_step	3.0

# default (initial) starting location in speech file (sec)
# This should be less than the file duration + start time.
ref_start	0.0

# ratio used for "zoom" operations on waveforms
# Any value except zero should work.
zoom_ratio	0.5

# Specify an external function (program) to "attach" to waves.
# The ones currently available are the labeler ("label", "xlabel")
# and a spectral estimation program, ("spectrum", "xspectrum").
# The users existing unix search path is used to find the actual 
# program to execute. 
# WARNING: leave this out if you want to load attachments directly 
# via the "attach" command in command files (this is a bug)
# funcname	xspectrum

#Here are a few globals that allow control of the xlabel control window
#position, the xspectrum control window position, and the xspectrum
#plot (data) window position and size 

#These two set the X and Y positions of the xlabel control window:
xlabel_ctlwin_x 650
xlabel_ctlwin_y 0

#These two set the X and Y positions of the xspectrum control window:
xspectrum_ctlwin_x      590
xspectrum_ctlwin_y      0

#These two set the width and height of xspectrum data (plot) windows
#(there can be more than one plot window - one per object):
xspectrum_datwin_height 250
xspectrum_datwin_width  425

#xspectrum_datwin_x and xspectrum_datwin_y control the initial
#position of the xspectrum data (plot window) if there is only one
#display object.  Positive values for xspectrum_datwin_x or
#xspectrum_datwin_y specify respectively the X and Y position of the
#xspectrum plot window if there is only one display object at the time
#the plot window is displayed.  If there is more than one display
#object, the xspectrum plot window is aligned with the first display
#window of the corresponding xwaves+ display object, with the xspectrum
#display directly underneath the left side of the xwaves+ window.  If
#xspectrum_data_win_x is negative, the top of all xspectrum plot
#windows is positioned directly underneath the first xwaves+ display
#window of the corresponding object.  If xspectrum_data_win_y is
#negative, the left side of all xspectrum plot windows is lined up
#(vertically) with the left side of the first xwaves+ display window of
#the corresponding object.
xspectrum_datwin_x      -1
xspectrum_datwin_y      -1

# variables which set: the fraction of "F0" displays used for F0;
# the minimum F0 displayed (Hz); and the range (in Hz) of F0 displayed.
f0_size	.6
f0_min	50
f0_range 150

# Determine the plotting style for F0; argument elements are type,
# plotting char., x-offset and y-offset, respectively.  If type is 0,
# the usual connect-the-dots paradigm is used; if type is 1, the data
# points are discretely plotted using the plot character.  x- and
# y-offsets are pixel offsets required to center the data points (font
# dependent).
f0_plot_specs 1 * 4 6

# Determine the initial definitions of left and middle button presses
# for waveform windows.
# left_op can be one of: "up/down move" "move closest" "modify signal" 
#                        "repeat previous"
left_op	up/down move

# middle_op can be one of: "blow up; function" "up/down move" "blow up time"
#			   "play between marks" "repeat previous"
middle_op play between marks

# Determine the initial definitions of left and middle button presses
# for spectrogram windows.
# spec_left_op can be one of: "up/down move" "move closest" "mark formants" 
#                             "repeat previous"
spec_left_op	up/down move

# spec_middle_op can be one of: "modify intensity" "move contour"
#				"play between marks" "up/down move"
#                         	"repeat previous"
spec_middle_op modify intensity

# Miscellaneous switches are set/cleared using the "options" keyword.
# See "OPTIONS" in $ESPS_BASE/doc/waves.help.
options 4

# name (and options, if any) of external program to call for 
# spectrogram calculations
sgram_prog   sgram

# name (and options, if any) of external program to call for 
# D/A operations
play_prog    play -q

# remote NFS path to use as prefix for file names in external commands
#remote_path  

# whether or not to show numeric values for each trace in a waveform 
# display (1 means show the values)
show_vals    1

# whether or not to show labels for ach trace in a waveform 
# display (1 means show the labels)
show_labels  1

# image_clip is used by the digital halftone algorithm; 
# (Spectrograms are displayed in digital halftone form on monochrome 
# monitors or when do_color is set to 0).  When
# Values between 127 and (127 -image_clip) are displayed in black. 
# The default value is 7 (i.e., in spectrogram terms, everything 
# 7db down from the maximum possible value is shown in black).
image_clip 7

# image_range is also used by the digital halftone algorithm; 
# Everything below (127 - image_clip - image_range) is shown in white.
# The default is 40 (i.e., in spectrogram terms, assuming 7 as the
# value of image_clip, every- thing more than 47db down from the maximum
# possible value is shown in white.  
image_range 40

# Some X servers reverse the sense of monochrome images.  
# Setting invert_dither to 1 causes the display of
# digital-halftone images to appear with black and white pixels reversed
invert_dither 0

# the path for temporary tiles 

temp_path /usr/tmp

#P8574_type

# number of INET socket port to use when operating in display-server mode

#socket_port

# name of a command file to be executed on startup
# we don't use a startup file as we load it directly

# name of a command file to be executed on startup
# if init_file is omitted, a default will be invoked (providing
# a standard button control panel).  If you don't want any init_file
# behavior (including the default), then you must specify an init_file
# that does nothing

# init file is for the demo initialization
init_file demoinit.WC

# This definition for output_dir is processed via a sed script before 
# starting up the demo:
output_dir  @DEMO_TEMP@







