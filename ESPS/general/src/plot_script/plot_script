#! /bin/sh
#-----------------------------------------------------------------------+
#									|
#   This material contains proprietary software of Entropic Speech,	|
#   Inc.  Any reproduction, distribution, or publication without the	|
#   prior written permission of Entropic Speech, Inc. is strictly	|
#   prohibited.  Any public distribution of copies of this work		|
#   authorized in writing by Entropic Speech, Inc. must bear the	|
#   notice								|
#									|
#    "Copyright (c) 1987 Entropic Speech, Inc. All rights reserved."	|
#									|
#-----------------------------------------------------------------------+
#									|
#  cover function for plotpit, plotsd, aplot, and plotpspec		|
#									|
#  by Rodney W. Johnson, Entropic Speech, Inc.				|
#									|
#  This command file runs the C program plotpit, plotsd, aplot, or	|
#  plotspec, depending on the name by which the command file is		|
#  invoked.  It pipes the output through various filter combinations	|
#  selected by the -T option.						|
#									|
#-----------------------------------------------------------------------+
# Sccs information: @(#)plot_script	3.26 12/21/92 ESI

PLOTDIR1=$PLOTDIR$
PLOTDIR2=$PLOTDIR$
SPSBIN=$SPSBIN$
IPR=$PLOTCOMMAND$
MCD=$MCD$
XWIN=$XWIN$
GPSTOHP=$SPSBIN/gpstohp

MACH=`mach_type`

if test $XWIN = YES
then
	case $MACH in
	SUN3 | SUN4 | SUN386i)
		if test x$EPLOTDEV = xsuntools
	 	then
	  		XWIN=NO
			MCD=mcd
		fi ;;
	esac
fi

SUN=NO
SUNTOOLS=NO
pflag=" "
rflag=X

if test $XWIN = YES
 then
  MACH=HP
fi

case $MACH in
SUN3)
	SUN=YES
	SUNTOOLS=YES
	BACKGROUND="&" 
	MCDOPTIONS="  " ;;
SUN4)
	SUN=YES
	SUNTOOLS=YES
	BACKGROUND="&" 
	MCDOPTIONS="  " ;;
SUN386i)
	SUN=YES
	SUNTOOLS=YES
	BACKGROUND="&" 
	MCDOPTIONS="  " ;;
HP)
	HP=YES
	XWIN=YES
	BACKGROUND="&" 
	MCDOPTIONS="  " ;;
esac

case $BUNDLE in
"")
    STOU=$PLOTDIR1/stou ;;
*)
    STOU=$PLOTDIR1/stou\ -b$BUNDLE ;;
esac

PLOTAS=$PLOTDIR1/plotas
TPEN=$PLOTDIR1/tpen
PLOTOPT=X

case $0 in
plotpit)
    PLOT=$PLOTDIR2/plotpit ;;
*/plotpit)
    PLOT=$PLOTDIR2/plotpit ;;
plotsd)
    TITLE="ESPS Sampled Data Plot"
    PLOTOPT=-D
    XICON=" -iSINE "
    PLOT=$PLOTDIR2/plotsd ;;
*/plotsd)
    TITLE="ESPS Sampled Data Plot"
    PLOTOPT=-D
    XICON=" -iSINE "
    PLOT=$PLOTDIR2/plotsd ;;
plotspec)
    PLOT=$PLOTDIR2/plotspec 
    TITLE="ESPS Spectral Plot"
    XICON=" -iSPEC "
    ICON=" -i $PLOTDIR2/icon.spec " ;;
*/plotspec)
    PLOT=$PLOTDIR2/plotspec 
    TITLE="ESPS Spectral Plot"
    XICON=" -iSPEC "
    ICON=" -i $PLOTDIR2/icon.spec " ;;
aplot)
    TITLE="ESPS aplot"
#    ICON=" -i $PLOTDIR2/icon.aplot "
    XICON=" -iHIST "
    PLOT=$PLOTDIR2/aplot ;;
*/aplot)
    TITLE="ESPS aplot"
#    ICON=" -i $PLOTDIR2/icon.aplot "
    XICON=" -iHIST "
    PLOT=$PLOTDIR2/aplot ;;
esac



device=$MCD


# Get command-line options and filenames.

WINOPT=" "
prevarg=
for i
do
    case $prevarg in
    -T)
	device=$i
	prevarg= ;;
    -t)
	command=$command" "\"$i\"
	prevarg= ;;
    -W)
	WINOPT=$i
	prevarg= ;;
    "")
	case $i in
	-r) 
	    rflag=YES
	    prevarg= ;;
	-x)
	    set -x
	    prevarg= ;;
	-T)
	    prevarg=-T ;;
	-T*)
	    device=`echo $i | awk '{print substr($0, 3)}'` ;;
	-t)
	    command=$command" "$i
	    prevarg=-t ;;
	-t*)
	    command=$command" "-t" "\"`echo $i \
				    | awk '{print substr($0, 3)}'`\" ;;
	-W)
	    prevarg=-W ;;
	-W*)
	    WINOPT=`echo $i | awk '{print substr($0, 3)}'` ;;
	-)
	    BACKGROUND=" " 
	    MCDOPT=" "
	    command=$command" "$i 
	    prevarg= ;;
	    
	*)
	    command=$command" "$i ;;
	esac;;
    esac
done

case $prevarg in
-T)
    echo $PLOT: -T requires argument.
    exit 1 ;;
-t)
    echo $PLOT: -t requires argument.
    exit 1 ;;
-W)
    echo $PLOT: -W requires argument.
    exit 1 ;;
esac

if test $device = suntools -a \( `mach_type` = SUN3 -o `mach_type` = SUN4 \)
 then
  XWIN=NO
  SUNTOOLS=YES
  MCD=mcd
  device=mcd
fi

if test $device = mcd -a `mach_type` = M5600
 then
 XWIN=NO
 SUNTOOLS=NO
 MCD=mcd
 BACKGROUND=" "
fi


if test $XWIN = YES
 then
 MCDOPT=$MCDOPT" "-t" "\"$TITLE\"" "$Pflag" "$XICON 
 else
 if test $SUNTOOLS = YES
  then
  MCDOPT=$MCDOPT" "-t" "\"$TITLE\"" "$Pflag" "$ICON 
  else
  MCDOPT=" "
 fi
fi




if test  $SUNTOOLS = YES -a $device = mcd -a $PLOTOPT = -D
 then
  PLOT=$PLOT" "$PLOTOPT
 fi

if test  $XWIN = YES -a $device = xmcd -a $PLOTOPT = -D
 then
  PLOT=$PLOT" "$PLOTOPT
 fi


# Build and execute command.

command=$PLOT" "$command

if test $device = mcd -a `mach_type` = M5600
 then
   MCD=mcd
else
   MCD=$SPSBIN/$MCD
fi

case $device in
gps)
    command=$command" | "$STOU
    sh -c "$command" ;;
mcd|mcdigh|xmcd)
    if test -n "$ESPS_TEMP_PATH"
    then 
	if test -d $ESPS_TEMP_PATH
	then
	  tmp=$ESPS_TEMP_PATH/plot$$
	else
	  tmp=/usr/tmp/plot$$
	fi
    else
	tmp=/usr/tmp/plot$$
    fi
    command=$command" >"$tmp
    eval "$command"
    if test -s $tmp
     then
	command=cat" "$tmp" | "$STOU" | "$MCD" "$MCDOPT" "$WINOPT" "$BACKGROUND
	eval "$command"
     else
	rm -f $tmp
	exit 1
    fi
    if test $SUNTOOLS = YES -o $XWIN = YES
     then
      eval "sleep 5 ; rm -f $tmp"&
     else
      rm -f $tmp 
    fi
    if test \( $SUNTOOLS = NO -a $XWIN = NO \) -a  \( x$pflag != x -o $rflag = YES \)
	then
	  exec range $pflag
    fi ;;
tek)
    command=$command" | "$PLOTAS" | "$TPEN
    sh -c "$command" ;;
imagen|hardcopy)
    command=$command" | "$PLOTAS" | "$TPEN" | "$IPR
    sh -c "$command" ;;
hp)
    command=$command" | "$STOU" | "$GPSTOHP
    sh -c "$command" ;;
no_mcd)
    echo Cannot plot to screen in this version.
    echo Check installation parameters.
esac
exit 0
